/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as ButtonclikrApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { PutFundingParametersIdRequestPlatform } from "../../types/PutFundingParametersIdRequestPlatform";
import { PutFundingParametersIdRequestLocked } from "../../types/PutFundingParametersIdRequestLocked";
import { PutFundingParametersIdRequestType } from "../../types/PutFundingParametersIdRequestType";
import { PutFundingParametersIdRequestPaymentMethods } from "../../types/PutFundingParametersIdRequestPaymentMethods";
import { PutFundingParametersIdRequestValue } from "../../types/PutFundingParametersIdRequestValue";
import { PutFundingParametersIdRequestInactive } from "../../types/PutFundingParametersIdRequestInactive";
import { PutFundingParametersIdRequestFrozen } from "../../types/PutFundingParametersIdRequestFrozen";

export const PutFundingParametersIdRequest: core.serialization.Schema<
    serializers.PutFundingParametersIdRequest.Raw,
    ButtonclikrApi.PutFundingParametersIdRequest
> = core.serialization.object({
    login: core.serialization.unknown(),
    entity: core.serialization.unknown().optional(),
    division: core.serialization.unknown().optional(),
    org: core.serialization.unknown().optional(),
    partition: core.serialization.unknown(),
    platform: PutFundingParametersIdRequestPlatform,
    locked: PutFundingParametersIdRequestLocked,
    type: PutFundingParametersIdRequestType,
    paymentMethods: PutFundingParametersIdRequestPaymentMethods.optional(),
    value: PutFundingParametersIdRequestValue,
    inactive: PutFundingParametersIdRequestInactive,
    frozen: PutFundingParametersIdRequestFrozen,
});

export declare namespace PutFundingParametersIdRequest {
    interface Raw {
        login?: unknown;
        entity?: unknown | null;
        division?: unknown | null;
        org?: unknown | null;
        partition?: unknown;
        platform: PutFundingParametersIdRequestPlatform.Raw;
        locked: PutFundingParametersIdRequestLocked.Raw;
        type: PutFundingParametersIdRequestType.Raw;
        paymentMethods?: PutFundingParametersIdRequestPaymentMethods.Raw | null;
        value: PutFundingParametersIdRequestValue.Raw;
        inactive: PutFundingParametersIdRequestInactive.Raw;
        frozen: PutFundingParametersIdRequestFrozen.Raw;
    }
}
