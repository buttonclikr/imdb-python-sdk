/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as ButtonclikrApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { PostInvoicesRequestAllowedPaymentMethods } from "../../types/PostInvoicesRequestAllowedPaymentMethods";
import { PostInvoicesRequestStatus } from "../../types/PostInvoicesRequestStatus";
import { PostInvoicesRequestEmailStatus } from "../../types/PostInvoicesRequestEmailStatus";
import { PostInvoicesRequestType } from "../../types/PostInvoicesRequestType";
import { Frozen } from "../../../../types/Frozen";
import { Inactive } from "../../../../types/Inactive";

export const PostInvoicesRequest: core.serialization.Schema<
    serializers.PostInvoicesRequest.Raw,
    ButtonclikrApi.PostInvoicesRequest
> = core.serialization.object({
    login: core.serialization.string(),
    merchant: core.serialization.string(),
    customer: core.serialization.string().optional(),
    subscription: core.serialization.string(),
    number: core.serialization.string(),
    allowedPaymentMethods: PostInvoicesRequestAllowedPaymentMethods.optional(),
    title: core.serialization.string().optional(),
    message: core.serialization.string().optional(),
    total: core.serialization.string().optional(),
    tax: core.serialization.string().optional(),
    discount: core.serialization.string().optional(),
    dueDate: core.serialization.string().optional(),
    expirationDate: core.serialization.string().optional(),
    sendOn: core.serialization.string().optional(),
    status: PostInvoicesRequestStatus,
    emailStatus: PostInvoicesRequestEmailStatus,
    emails: core.serialization.string().optional(),
    type: PostInvoicesRequestType,
    frozen: Frozen,
    inactive: Inactive,
});

export declare namespace PostInvoicesRequest {
    interface Raw {
        login: string;
        merchant: string;
        customer?: string | null;
        subscription: string;
        number: string;
        allowedPaymentMethods?: PostInvoicesRequestAllowedPaymentMethods.Raw | null;
        title?: string | null;
        message?: string | null;
        total?: string | null;
        tax?: string | null;
        discount?: string | null;
        dueDate?: string | null;
        expirationDate?: string | null;
        sendOn?: string | null;
        status: PostInvoicesRequestStatus.Raw;
        emailStatus: PostInvoicesRequestEmailStatus.Raw;
        emails?: string | null;
        type: PostInvoicesRequestType.Raw;
        frozen: Frozen.Raw;
        inactive: Inactive.Raw;
    }
}
