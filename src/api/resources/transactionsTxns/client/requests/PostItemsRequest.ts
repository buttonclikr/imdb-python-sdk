/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as ButtonclikrApi from "../../../../index";

/**
 * @example
 *     {
 *         txn: "txn",
 *         item: "item",
 *         quantity: 1,
 *         price: 1,
 *         inactive: 1,
 *         frozen: 1
 *     }
 */
export interface PostItemsRequest {
    /** The txn in which these items have been sold, A single txn may have many items. */
    txn: string;
    /** The SKU, short name or title of the item sold. */
    item: string;
    /**
     * A description of this Item.
     * This field is stored as a text string and must be between 0 and 500 characters long.
     */
    description?: string;
    /**
     * A custom identifier for this line Item.
     * This field is stored as a text string and must be between 0 and 500 characters long.
     */
    custom?: string;
    /**
     * The quantity of this Item included in the Transaction.
     * This field is specified as an integer.
     */
    quantity: number;
    /**
     * The amount charged for this Item.
     * This field is specified as an integer in cents.
     */
    price: number;
    /**
     * The unit of measure for this Item.
     * This field is stored as a text string and must be between 0 and 100 characters long.
     * Examples of units of measure may be: each, kilogram, pound, month.
     */
    um?: string;
    /**
     * The total price for the line item.
     * This field is specified as an integer in cents.
     */
    total?: number;
    /**
     * The commodity code for this Item.
     * This field is stored as a text string and must be between 0 and 12 characters long.
     */
    commodityCode?: string;
    /**
     * The product code for this Item such as: UPC, catalog number, or inventory number.
     * This field is stored as a text string and must be between 0 and 100 characters long.
     */
    productCode?: string;
    /**
     * The discount for the line item.
     * This field is specified as an integer in cents.
     */
    discount?: number;
    inactive: ButtonclikrApi.Inactive;
    frozen: ButtonclikrApi.Frozen;
}
