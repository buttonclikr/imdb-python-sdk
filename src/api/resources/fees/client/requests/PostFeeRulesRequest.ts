/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as ButtonclikrApi from "../../../../index";

/**
 * @example
 *     {
 *         fee: {
 *             "key": "value"
 *         },
 *         name: {
 *             "key": "value"
 *         },
 *         description: {
 *             "key": "value"
 *         },
 *         type: ButtonclikrApi.PostFeeRulesRequestType.Less,
 *         application: ButtonclikrApi.PostFeeRulesRequestApplication.Both,
 *         value: ButtonclikrApi.PostFeeRulesRequestValue.Zero,
 *         grouping: {
 *             "key": "value"
 *         },
 *         inactive: ButtonclikrApi.PostFeeRulesRequestInactive.Zero,
 *         frozen: ButtonclikrApi.PostFeeRulesRequestFrozen.Zero
 *     }
 */
export interface PostFeeRulesRequest {
    fee?: unknown;
    name?: unknown;
    description?: unknown;
    /** The type of Transaction. Valid Values: `1` - Credit Card Only: Sale Transaction, processes a sale and charges the customer; `2` - Credit Card Only: Auth Transaction, authorizes and holds the requested total on the credit card; `3` - Credit Card Only: Capture Transaction, finalizes a prior Auth Transaction and charges the customer; `4` - Credit Card Only: Reverse Authorization, reverses a prior Auth or Sale Transaction and releases the credit hold; `5` - Credit Card Only: Refund Transaction, refunds a prior Capture or Sale Transaction (total may be specified for a partial refund); `7` - Echeck Only: Echeck Sale Transaction, sale transaction for ECheck payment; `8` - Echeck Only: ECheck Refund Transaction, refund transaction for prior ECheck Sale Transaction; `11` - Echeck Only: Echeck Redeposit Transaction, attempt to redeposit a prior failed eCheck Sale Transaction; `12` - Echeck Only: Echeck Account Verification Transaction, attempt to verify eCheck payment details. */
    type: ButtonclikrApi.PostFeeRulesRequestType;
    /** Where the feeRule should apply. Valid Values: `both` - Both, the rule should apply to the fee and to the calculation of collections; `fee` - Fee, the rule should apply only to the fee itself; `collection` - Collection, the fee should be used only when calculating a collection. */
    application: ButtonclikrApi.PostFeeRulesRequestApplication;
    /** The value to compare against when evaluating this Fee Rule. Valid Values: `0` - TBD; `1` - TBD; `2` - TBD; `3` - TBD; `4` - TBD; `5` - TBD. */
    value: ButtonclikrApi.PostFeeRulesRequestValue;
    grouping?: unknown;
    /** Whether this resource is marked as inactive. Valid Values: `0` - Active, `1` - Inactive. */
    inactive: ButtonclikrApi.PostFeeRulesRequestInactive;
    /** Whether this resource is marked as frozen. Valid Values: `0` - Not Frozen, `1` - Frozen. */
    frozen: ButtonclikrApi.PostFeeRulesRequestFrozen;
}
