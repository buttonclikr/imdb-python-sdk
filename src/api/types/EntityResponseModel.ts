/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as ButtonclikrApi from "../index";

export interface EntityResponseModel {
    id?: ButtonclikrApi.Id;
    created?: ButtonclikrApi.Created;
    modified?: ButtonclikrApi.Modified;
    creator?: ButtonclikrApi.Creator;
    modifier?: ButtonclikrApi.Modifier;
    /** The incoming ip address from which this Entity was created. */
    ipCreated?: string;
    /** The incoming ip address from which this Entity was last modified. */
    ipModified?: string;
    /**
     * The client ip address from which the Entity was created.
     * Valid values are any Ipv4 or Ipv6 address.
     */
    clientIp?: string;
    /** The Login that owns this resource. */
    login?: string;
    /** The parameter associated with this Entity. */
    parameter?: string;
    /** Disbursement ID of the first disbursement this entity triggered */
    firstDisbursement?: string;
    /** Sum of all negative disbursements associated to this entity- in cents */
    totalCreditDisbursements?: string;
    /** The type of Entity. */
    type?: number;
    /**
     * The name of this Entity.
     * This field is stored as a text string and must be between 1 and 100 characters long.
     */
    name?: string;
    /**
     * The display name of this Entity.
     * This field is stored as a text string and must be between 1 and 1000 characters long.
     */
    displayName?: string;
    /**
     * The first line of the address associated with this Entity.
     * This field is stored as a text string and must be between 1 and 500 characters long.
     */
    address1?: string;
    /**
     * The second line of the address associated with this Entity.
     * This field is stored as a text string and must be between 1 and 500 characters long.
     */
    address2?: string;
    /**
     * The name of the city in the address associated with this Entity.
     * This field is stored as a text string and must be between 1 and 500 characters long.
     */
    city?: string;
    /**
     * The U.S. state associated with this Entity.
     * Valid values are any U.S. state's 2 character postal abbreviation.
     */
    state?: ButtonclikrApi.EntityResponseModelState;
    /**
     * The web site URL associated with this Entity.
     * This field is stored as a text string and must be between 0 and 500 characters long.
     */
    website?: string;
    /**
     * The web sites URL associated with this Entity.
     * This field is stored as a text string, must be between 0 and 1000 characters long and separated by comma
     */
    appleDomain?: string;
    /**
     * The ZIP code in the address associated with this Entity.
     * This field is stored as a text string and must be between 1 and 20 characters long.
     */
    zip?: string;
    /** The country in the address associated with the Entity. */
    country?: ButtonclikrApi.EntityResponseModelCountry;
    /** The timezone for the address associated with the Entity's location. */
    timezone?: ButtonclikrApi.EntityResponseModelTimezone;
    /**
     * The phone number associated with this Entity.
     * This field is stored as a text string and must be between 5 and 15 characters long.
     */
    phone?: string;
    /**
     * The customer service phone number associated with this Entity. For Merchants, this number will be displayed on the customer's credit card statement.
     * This field is stored as a text string and must be between 5 and 15 characters long.
     */
    customerPhone?: string;
    /**
     * The fax number associated with this Entity.
     * This field is stored as a text string and must be between 5 and 15 characters long.
     */
    fax?: string;
    /**
     * The email address associated with this Entity.
     * This field is stored as a text string and must be between 1 and 100 characters long.
     */
    email?: string;
    /**
     * The IRS Employer Number (EIN) for the Entity.
     * This field is stored as an interger and must be 9 characters long.
     */
    ein?: string;
    /** Indicates if the EIN being used is a TIN or SSN or "other/unknown" number. */
    einType?: ButtonclikrApi.EntityResponseModelEinType;
    /**
     * The business registration number for the entity.
     * This field is stored as an alpha numeric and must be between 9 to 10 characters long
     */
    globalBusinessId?: string;
    /** The business registration type for the entity. */
    globalBusinessType?: ButtonclikrApi.EntityResponseModelGlobalBusinessType;
    /** The IRS Legal Filing Name. This must match what has been provided to the IRS when filing taxes. */
    irsFilingName?: string;
    /**
     * The number of locations at which this Entity does business.
     * This field is stored as an integer and must be between 1 and 1000000 characters long.
     */
    locations?: string;
    /**
     * An indicator showing the version of the terms and conditions that this Entity has accepted. The API indicates the version as a string.
     * This field is stored as a text string and must be between 0 and 20 characters long.
     */
    tcVersion?: string;
    /** Date the tcVersion was last updated. */
    tcDate?: Date;
    /** IP address of client from last tcVersion update. */
    tcIp?: string;
    /**
     * Date and time on which this Entity accepted the Terms and Conditions, if different than tcDate.
     * The date is specified as a twelve digit string in YYYYMMDDHHII format, for example, '201601201528' for January 20, 2016 at 15:28 (3:28 pm).
     */
    tcAcceptDate?: string;
    /** IP address from which this Entity accepted the Terms and Conditions, if different than tcIp. */
    tcAcceptIp?: string;
    /** Custom, free-form field for client-supplied text, must be between 0 and 1000 characters long. */
    custom?: string;
    /** The Tax ID (TIN) status of the entity. */
    tinStatus?: ButtonclikrApi.EntityResponseModelTinStatus;
    /** Indicates whether this is a publicly held entity. */
    public?: ButtonclikrApi.EntityResponseModelPublic;
    reserved?: ButtonclikrApi.EntityResponseModelReserved;
    /** Whether it is pending a risk check. */
    pendingRiskCheck?: ButtonclikrApi.EntityResponseModelPendingRiskCheck;
    /** The last stage completed for risk. */
    checkStage?: ButtonclikrApi.EntityResponseModelCheckStage;
    /** This field is stored as a text string and must be between 0 and 1000 characters long. */
    industry?: string;
    /** The secondary billing descriptor to appear on the bank statements for funds transfer for the entity. */
    payoutSecondaryDescriptor?: string;
    /** The currency of this Entity. */
    currency?: ButtonclikrApi.EntityResponseModelCurrency;
    frozen?: ButtonclikrApi.Frozen;
    inactive?: ButtonclikrApi.Inactive;
}
