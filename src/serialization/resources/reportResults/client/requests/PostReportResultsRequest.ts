/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as ButtonclikrApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { PostReportResultsRequestDocumentType } from "../../types/PostReportResultsRequestDocumentType";
import { PostReportResultsRequestStatus } from "../../types/PostReportResultsRequestStatus";
import { PostReportResultsRequestInactive } from "../../types/PostReportResultsRequestInactive";
import { PostReportResultsRequestFrozen } from "../../types/PostReportResultsRequestFrozen";

export const PostReportResultsRequest: core.serialization.Schema<
    serializers.PostReportResultsRequest.Raw,
    ButtonclikrApi.PostReportResultsRequest
> = core.serialization.object({
    report: core.serialization.unknown(),
    documentType: PostReportResultsRequestDocumentType,
    status: PostReportResultsRequestStatus,
    effective: core.serialization.unknown().optional(),
    inactive: PostReportResultsRequestInactive,
    frozen: PostReportResultsRequestFrozen,
});

export declare namespace PostReportResultsRequest {
    interface Raw {
        report?: unknown;
        documentType: PostReportResultsRequestDocumentType.Raw;
        status: PostReportResultsRequestStatus.Raw;
        effective?: unknown | null;
        inactive: PostReportResultsRequestInactive.Raw;
        frozen: PostReportResultsRequestFrozen.Raw;
    }
}
