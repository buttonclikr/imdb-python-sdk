/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as ButtonclikrApi from "../../api/index";
import * as core from "../../core";
import { Id } from "./Id";
import { Created } from "./Created";
import { Modified } from "./Modified";
import { Creator } from "./Creator";
import { Modifier } from "./Modifier";
import { MerchantResponseModelNew } from "./MerchantResponseModelNew";
import { MerchantResponseModelIncrementalAuthSupported } from "./MerchantResponseModelIncrementalAuthSupported";
import { MerchantResponseModelSeasonal } from "./MerchantResponseModelSeasonal";
import { MerchantResponseModelAdvancedBilling } from "./MerchantResponseModelAdvancedBilling";
import { MerchantResponseModelVisaDisclosure } from "./MerchantResponseModelVisaDisclosure";
import { MerchantResponseModelEnvironment } from "./MerchantResponseModelEnvironment";
import { MerchantResponseModelStatus } from "./MerchantResponseModelStatus";
import { MerchantResponseModelAutoBoarded } from "./MerchantResponseModelAutoBoarded";
import { MerchantResponseModelRiskLevel } from "./MerchantResponseModelRiskLevel";
import { MerchantResponseModelSaqType } from "./MerchantResponseModelSaqType";
import { MerchantResponseModelLetterStatus } from "./MerchantResponseModelLetterStatus";
import { MerchantResponseModelTcAttestation } from "./MerchantResponseModelTcAttestation";
import { MerchantResponseModelInactive } from "./MerchantResponseModelInactive";
import { MerchantResponseModelLocationType } from "./MerchantResponseModelLocationType";
import { MerchantResponseModelApplePayActive } from "./MerchantResponseModelApplePayActive";
import { MerchantResponseModelGooglePayActive } from "./MerchantResponseModelGooglePayActive";
import { MerchantResponseModelNaics } from "./MerchantResponseModelNaics";
import { MerchantResponseModelExpressBatchCloseMethod } from "./MerchantResponseModelExpressBatchCloseMethod";
import { MerchantResponseModelPassTokenEnabled } from "./MerchantResponseModelPassTokenEnabled";

export const MerchantResponseModel: core.serialization.ObjectSchema<
    serializers.MerchantResponseModel.Raw,
    ButtonclikrApi.MerchantResponseModel
> = core.serialization.object({
    id: Id.optional(),
    created: Created.optional(),
    modified: Modified.optional(),
    creator: Creator.optional(),
    modifier: Modifier.optional(),
    lastActivity: core.serialization.date().optional(),
    totalApprovedSales: core.serialization.string().optional(),
    entity: core.serialization.string().optional(),
    dba: core.serialization.string().optional(),
    new: MerchantResponseModelNew.optional(),
    incrementalAuthSupported: MerchantResponseModelIncrementalAuthSupported.optional(),
    seasonal: MerchantResponseModelSeasonal.optional(),
    advancedBilling: MerchantResponseModelAdvancedBilling.optional(),
    established: core.serialization.string().optional(),
    annualCcSales: core.serialization.property("annualCCSales", core.serialization.string().optional()),
    annualCcSaleVolume: core.serialization.property("annualCCSaleVolume", core.serialization.string().optional()),
    annualAchSaleVolume: core.serialization.property("annualACHSaleVolume", core.serialization.string().optional()),
    amexVolume: core.serialization.string().optional(),
    avgTicket: core.serialization.string().optional(),
    amex: core.serialization.string().optional(),
    discover: core.serialization.string().optional(),
    mcc: core.serialization.string().optional(),
    visaMvv: core.serialization.string().optional(),
    visaDisclosure: MerchantResponseModelVisaDisclosure.optional(),
    disclosureIp: core.serialization.property("disclosureIP", core.serialization.string().optional()),
    disclosureDate: core.serialization.string().optional(),
    environment: MerchantResponseModelEnvironment.optional(),
    status: MerchantResponseModelStatus.optional(),
    autoBoarded: MerchantResponseModelAutoBoarded.optional(),
    statusReason: core.serialization.string().optional(),
    accountClosureReasonCode: core.serialization.string().optional(),
    accountClosureReasonDate: core.serialization.string().optional(),
    riskLevel: MerchantResponseModelRiskLevel.optional(),
    creditRatio: core.serialization.string().optional(),
    creditTimeliness: core.serialization.string().optional(),
    chargebackRatio: core.serialization.string().optional(),
    ndxDays: core.serialization.string().optional(),
    ndxPercentage: core.serialization.string().optional(),
    boarded: core.serialization.string().optional(),
    tinStatus: core.serialization.string().optional(),
    saqType: MerchantResponseModelSaqType.optional(),
    saqDate: core.serialization.string().optional(),
    qsa: core.serialization.string().optional(),
    letterStatus: MerchantResponseModelLetterStatus.optional(),
    letterDate: core.serialization.string().optional(),
    tcDate: core.serialization.date().optional(),
    tcAttestation: MerchantResponseModelTcAttestation.optional(),
    tmxSessionId: core.serialization.string().optional(),
    chargebackNotificationEmail: core.serialization.string().optional(),
    inactive: MerchantResponseModelInactive.optional(),
    frozen: core.serialization.unknown().optional(),
    locationType: MerchantResponseModelLocationType.optional(),
    percentKeyed: core.serialization.string().optional(),
    totalVolume: core.serialization.string().optional(),
    percentEcomm: core.serialization.string().optional(),
    percentBusiness: core.serialization.string().optional(),
    applePayActive: MerchantResponseModelApplePayActive.optional(),
    applePayStatus: core.serialization.string().optional(),
    googlePayActive: MerchantResponseModelGooglePayActive.optional(),
    naics: MerchantResponseModelNaics.optional(),
    naicsDescription: core.serialization.string().optional(),
    expressBatchCloseMethod: MerchantResponseModelExpressBatchCloseMethod.optional(),
    expressBatchCloseTime: core.serialization.string().optional(),
    passTokenEnabled: MerchantResponseModelPassTokenEnabled.optional(),
});

export declare namespace MerchantResponseModel {
    interface Raw {
        id?: Id.Raw | null;
        created?: Created.Raw | null;
        modified?: Modified.Raw | null;
        creator?: Creator.Raw | null;
        modifier?: Modifier.Raw | null;
        lastActivity?: string | null;
        totalApprovedSales?: string | null;
        entity?: string | null;
        dba?: string | null;
        new?: MerchantResponseModelNew.Raw | null;
        incrementalAuthSupported?: MerchantResponseModelIncrementalAuthSupported.Raw | null;
        seasonal?: MerchantResponseModelSeasonal.Raw | null;
        advancedBilling?: MerchantResponseModelAdvancedBilling.Raw | null;
        established?: string | null;
        annualCCSales?: string | null;
        annualCCSaleVolume?: string | null;
        annualACHSaleVolume?: string | null;
        amexVolume?: string | null;
        avgTicket?: string | null;
        amex?: string | null;
        discover?: string | null;
        mcc?: string | null;
        visaMvv?: string | null;
        visaDisclosure?: MerchantResponseModelVisaDisclosure.Raw | null;
        disclosureIP?: string | null;
        disclosureDate?: string | null;
        environment?: MerchantResponseModelEnvironment.Raw | null;
        status?: MerchantResponseModelStatus.Raw | null;
        autoBoarded?: MerchantResponseModelAutoBoarded.Raw | null;
        statusReason?: string | null;
        accountClosureReasonCode?: string | null;
        accountClosureReasonDate?: string | null;
        riskLevel?: MerchantResponseModelRiskLevel.Raw | null;
        creditRatio?: string | null;
        creditTimeliness?: string | null;
        chargebackRatio?: string | null;
        ndxDays?: string | null;
        ndxPercentage?: string | null;
        boarded?: string | null;
        tinStatus?: string | null;
        saqType?: MerchantResponseModelSaqType.Raw | null;
        saqDate?: string | null;
        qsa?: string | null;
        letterStatus?: MerchantResponseModelLetterStatus.Raw | null;
        letterDate?: string | null;
        tcDate?: string | null;
        tcAttestation?: MerchantResponseModelTcAttestation.Raw | null;
        tmxSessionId?: string | null;
        chargebackNotificationEmail?: string | null;
        inactive?: MerchantResponseModelInactive.Raw | null;
        frozen?: unknown | null;
        locationType?: MerchantResponseModelLocationType.Raw | null;
        percentKeyed?: string | null;
        totalVolume?: string | null;
        percentEcomm?: string | null;
        percentBusiness?: string | null;
        applePayActive?: MerchantResponseModelApplePayActive.Raw | null;
        applePayStatus?: string | null;
        googlePayActive?: MerchantResponseModelGooglePayActive.Raw | null;
        naics?: MerchantResponseModelNaics.Raw | null;
        naicsDescription?: string | null;
        expressBatchCloseMethod?: MerchantResponseModelExpressBatchCloseMethod.Raw | null;
        expressBatchCloseTime?: string | null;
        passTokenEnabled?: MerchantResponseModelPassTokenEnabled.Raw | null;
    }
}
