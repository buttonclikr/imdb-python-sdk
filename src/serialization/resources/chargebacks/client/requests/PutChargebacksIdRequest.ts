/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as ButtonclikrApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { PutChargebacksIdRequestCurrency } from "../../types/PutChargebacksIdRequestCurrency";
import { PutChargebacksIdRequestPlatform } from "../../types/PutChargebacksIdRequestPlatform";
import { PutChargebacksIdRequestPaymentMethod } from "../../types/PutChargebacksIdRequestPaymentMethod";
import { PutChargebacksIdRequestCycle } from "../../types/PutChargebacksIdRequestCycle";
import { PutChargebacksIdRequestStatus } from "../../types/PutChargebacksIdRequestStatus";
import { PutChargebacksIdRequestActionable } from "../../types/PutChargebacksIdRequestActionable";
import { PutChargebacksIdRequestShadow } from "../../types/PutChargebacksIdRequestShadow";
import { PutChargebacksIdRequestInactive } from "../../types/PutChargebacksIdRequestInactive";
import { PutChargebacksIdRequestFrozen } from "../../types/PutChargebacksIdRequestFrozen";

export const PutChargebacksIdRequest: core.serialization.Schema<
    serializers.PutChargebacksIdRequest.Raw,
    ButtonclikrApi.PutChargebacksIdRequest
> = core.serialization.object({
    txn: core.serialization.unknown().optional(),
    merchant: core.serialization.unknown(),
    mid: core.serialization.unknown(),
    total: core.serialization.unknown(),
    representedTotal: core.serialization.unknown().optional(),
    description: core.serialization.unknown().optional(),
    currency: PutChargebacksIdRequestCurrency,
    platform: PutChargebacksIdRequestPlatform,
    paymentMethod: PutChargebacksIdRequestPaymentMethod.optional(),
    ref: core.serialization.unknown(),
    cycle: PutChargebacksIdRequestCycle,
    reason: core.serialization.unknown().optional(),
    reasonCode: core.serialization.unknown().optional(),
    issued: core.serialization.unknown().optional(),
    received: core.serialization.unknown().optional(),
    reply: core.serialization.unknown().optional(),
    bankRef: core.serialization.unknown().optional(),
    chargebackRef: core.serialization.unknown().optional(),
    status: PutChargebacksIdRequestStatus,
    lastStatusChange: core.serialization.unknown().optional(),
    actionable: PutChargebacksIdRequestActionable,
    shadow: PutChargebacksIdRequestShadow.optional(),
    inactive: PutChargebacksIdRequestInactive,
    frozen: PutChargebacksIdRequestFrozen,
});

export declare namespace PutChargebacksIdRequest {
    interface Raw {
        txn?: unknown | null;
        merchant?: unknown;
        mid?: unknown;
        total?: unknown;
        representedTotal?: unknown | null;
        description?: unknown | null;
        currency: PutChargebacksIdRequestCurrency.Raw;
        platform: PutChargebacksIdRequestPlatform.Raw;
        paymentMethod?: PutChargebacksIdRequestPaymentMethod.Raw | null;
        ref?: unknown;
        cycle: PutChargebacksIdRequestCycle.Raw;
        reason?: unknown | null;
        reasonCode?: unknown | null;
        issued?: unknown | null;
        received?: unknown | null;
        reply?: unknown | null;
        bankRef?: unknown | null;
        chargebackRef?: unknown | null;
        status: PutChargebacksIdRequestStatus.Raw;
        lastStatusChange?: unknown | null;
        actionable: PutChargebacksIdRequestActionable.Raw;
        shadow?: PutChargebacksIdRequestShadow.Raw | null;
        inactive: PutChargebacksIdRequestInactive.Raw;
        frozen: PutChargebacksIdRequestFrozen.Raw;
    }
}
