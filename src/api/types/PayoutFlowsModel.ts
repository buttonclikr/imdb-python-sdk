/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as ButtonclikrApi from "../index";

export interface PayoutFlowsModel {
    id?: ButtonclikrApi.Id;
    created?: ButtonclikrApi.Created;
    modified?: ButtonclikrApi.Modified;
    creator?: ButtonclikrApi.Creator;
    modifier?: ButtonclikrApi.Modifier;
    /** The Login that owns this resource. */
    login?: string;
    /** The Login that will own the Payout resource. When set to null, the Payout resource will be owned by the triggerring Entity. */
    payoutLogin?: string;
    /**
     * The identifier of the Org that this payoutFlows resource applies to.
     * If you set this field, then the payoutFlow applies to all Entities in the Org.
     */
    org?: string;
    /** The identifier of the Division in which entities will have automated payouts generated. */
    division?: string;
    /** The identifier of the Partition in which entities will have automated payouts generated. */
    partition?: string;
    /** The identifier of the Entity that this payoutFlow applies to. */
    entity?: string;
    /**
     * The identifier of a Billing that this PayoutFlow is associated with.
     * The Billing identifier will be carried over to Payouts created based on this PayoutFlow.
     */
    billing?: string;
    /**
     * The event on the Org or Entity that should trigger the creation of an associated Payout resource.
     *
     * <details>
     * <summary>Valid Values</summary>
     *
     * - `accountCreate` - Primary payment account creation (primary must be 1)
     *
     * - `board` - Merchant boarding
     *
     *  </details>
     */
    trigger?: ButtonclikrApi.PayoutFlowsModelTrigger;
    /**
     * the schedule that determines when the Payout resource that is created should be triggered to be paid.
     *
     * <details>
     * <summary>Valid Values</summary>
     * - `days` - Payout schedule every day.
     * - `weeks` - Payout schedule every week.
     * - `months` - Payout schedule every month.
     * - `years` - Payout schedule every year.
     * - `single` - Payout schedule for one time.
     * </details>
     */
    schedule?: ButtonclikrApi.PayoutFlowsModelSchedule;
    /**
     * A multiplier that you can use to adjust the schedule set in the 'schedule' field, if it is set to a duration-based trigger, such as daily, weekly, monthly, or annually.
     * This affects the Payout resource that is created by this payoutFlow.
     * This field is specified as an integer and its value determines how the interval is multiplied.
     */
    scheduleFactor?: number;
    /**
     * The date on which payment of the Payout should start.
     * The date is specified as an eight digit string in YYYYMMDD format, for example, '20160120' for January 20, 2016.
     */
    start?: number;
    /** The unit of measure for the Payout resource that is created. For example, if the Entity has a negative balance of $10 and the amount is set to 10000 (100%), then $10 will be drawn from their account to fully replenish the balance to $0. */
    um?: string;
    /**
     * The total amount of the Payout resource that is created.
     * The units used in this field are determined by the value of the 'um' field on the Payout. If the 'um' field is set to '1' or '3', then this field specifies the Payout percentage to levy in basis points. If the 'um' field is set to '2', then this field specifies the Payout in cents.
     */
    amount?: number;
    /** The minium amout of payout that will process. */
    minimum?: number;
    /** The secondary billing descriptor to appear on the bank statements in which entities will have automated payouts generated. */
    secondaryDescriptor?: string;
    /**
     * Whether the Payout resource will be marked as inactive
     *
     * <details>
     * <summary>Valid Values</summary>
     *
     * - `0` - **Inactive**
     *
     * - `1` - **Active**
     *
     *  </details>
     */
    payoutInactive?: number;
    /**
     * Whether the Payout resource will be marked to skip the creation of disbursements on holidays and weekends.
     *
     * <details>
     * <summary>Valid Values</summary>
     *
     * - `0` - Do not skip Holidays and Weekends. Disbursement will be generated in a Requested status and process the next business day.
     *
     * - `1` - Skip Holidays and Weekends. IMPORTANT: We do not advise setting this for weekly, monthly, or yearly Payout schedules as the disbursement will skip and not be generated until the next scheduled date.
     *
     *  </details>
     */
    skipOffDays?: number;
    /**
     * Whether the payout workflow allows for same day payouts.
     *
     * <details>
     * <summary>Valid Values</summary>
     *
     * - `0` - **Disabled**
     *
     * - `1` - **Enabled**
     *
     *  </details>
     */
    sameDay?: number;
    /** The identifier of a currency that this PayoutFlow is associated with. This field is optional and there is no currency restriction for the PayoutFlow if it's not set. */
    currency?: ButtonclikrApi.PayoutFlowsModelCurrency;
    frozen?: ButtonclikrApi.Frozen;
    inactive?: ButtonclikrApi.Inactive;
}
