/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as ButtonclikrApi from "../../../../index";

/**
 * @example
 *     {
 *         login: {
 *             "key": "value"
 *         },
 *         org: {
 *             "key": "value"
 *         },
 *         entity: {
 *             "key": "value"
 *         },
 *         decision: {
 *             "key": "value"
 *         },
 *         division: {
 *             "key": "value"
 *         },
 *         partition: {
 *             "key": "value"
 *         },
 *         application: ButtonclikrApi.PostDecisionsRequestApplication.Account,
 *         level: {
 *             "key": "value"
 *         },
 *         type: ButtonclikrApi.PostDecisionsRequestType.MerchantFailureLimit,
 *         target: ButtonclikrApi.PostDecisionsRequestTarget.Activation,
 *         action: ButtonclikrApi.PostDecisionsRequestAction.Zero,
 *         sequence: {
 *             "key": "value"
 *         },
 *         amount: {
 *             "key": "value"
 *         },
 *         value: ButtonclikrApi.PostDecisionsRequestValue.One,
 *         period: ButtonclikrApi.PostDecisionsRequestPeriod.Days,
 *         periodFactor: {
 *             "key": "value"
 *         },
 *         schedule: {
 *             "key": "value"
 *         },
 *         scheduleFactor: {
 *             "key": "value"
 *         },
 *         start: {
 *             "key": "value"
 *         },
 *         finish: {
 *             "key": "value"
 *         },
 *         low: {
 *             "key": "value"
 *         },
 *         high: {
 *             "key": "value"
 *         },
 *         useCache: ButtonclikrApi.PostDecisionsRequestUseCache.Zero,
 *         cacheTime: {
 *             "key": "value"
 *         },
 *         options: {
 *             "key": "value"
 *         },
 *         additionalOptions: {
 *             "key": "value"
 *         },
 *         errorMessage: {
 *             "key": "value"
 *         },
 *         reason: {
 *             "key": "value"
 *         },
 *         inactive: ButtonclikrApi.PostDecisionsRequestInactive.Zero,
 *         frozen: ButtonclikrApi.PostDecisionsRequestFrozen.Zero
 *     }
 */
export interface PostDecisionsRequest {
    login?: unknown;
    org?: unknown;
    entity?: unknown;
    decision?: unknown;
    division?: unknown;
    partition?: unknown;
    /** Where the action defined by this DecisionAction should apply */
    application: ButtonclikrApi.PostDecisionsRequestApplication;
    level?: unknown;
    /** The type of check to perform. */
    type: ButtonclikrApi.PostDecisionsRequestType;
    /** The target that this decision should apply at. */
    target: ButtonclikrApi.PostDecisionsRequestTarget;
    /** The action to take when this check fails. */
    action: ButtonclikrApi.PostDecisionsRequestAction;
    sequence?: unknown;
    amount?: unknown;
    /** The amount that the associated Transaction should be compared against. The units for this field depend on the type of check: for checks that are based on a ratio, specify the amount as a percentage in basis points; for checks that are based on a dollar amount, specify the amount in cents; for checks that are based on a count, specify the exact value as an integer. */
    value: ButtonclikrApi.PostDecisionsRequestValue;
    /** A date indicator that determines how far back in time time-based checks should be checked. This field works in conjunction with the 'periodFactor' field, which multiplies this basic period. */
    period: ButtonclikrApi.PostDecisionsRequestPeriod;
    periodFactor?: unknown;
    schedule?: unknown;
    scheduleFactor?: unknown;
    start?: unknown;
    finish?: unknown;
    low?: unknown;
    high?: unknown;
    /** Whether to check for and use existing Verifications and Verification Results for this decision */
    useCache: ButtonclikrApi.PostDecisionsRequestUseCache;
    cacheTime?: unknown;
    options?: unknown;
    additionalOptions?: unknown;
    errorMessage?: unknown;
    reason?: unknown;
    /** Whether this resource is marked as inactive. Valid Values: `0` - Active, `1` - Inactive. */
    inactive: ButtonclikrApi.PostDecisionsRequestInactive;
    /** Whether this resource is marked as frozen. Valid Values: `0` - Not Frozen, `1` - Frozen. */
    frozen: ButtonclikrApi.PostDecisionsRequestFrozen;
}
