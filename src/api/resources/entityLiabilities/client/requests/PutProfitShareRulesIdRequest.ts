/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as ButtonclikrApi from "../../../../index";

/**
 * @example
 *     {
 *         profitShare: {
 *             "key": "value"
 *         },
 *         name: {
 *             "key": "value"
 *         },
 *         description: {
 *             "key": "value"
 *         },
 *         type: ButtonclikrApi.PutProfitShareRulesIdRequestType.Less,
 *         value: "string",
 *         grouping: {
 *             "key": "value"
 *         },
 *         inactive: ButtonclikrApi.PutProfitShareRulesIdRequestInactive.Zero,
 *         frozen: ButtonclikrApi.PutProfitShareRulesIdRequestFrozen.Zero
 *     }
 */
export interface PutProfitShareRulesIdRequest {
    profitShare?: unknown;
    name?: unknown;
    description?: unknown;
    /** The type of logic to apply with this ProfitShare Rule is determined by valid values such as `less`, `equal`, `notEqual`, `greater`, `event`, `notEvent`, `fee`, `notFee`, and `fromentity` or `notFromentity`. */
    type: ButtonclikrApi.PutProfitShareRulesIdRequestType;
    /** The value to compare against when evaluating this Profit Share Rule. */
    value: string;
    grouping?: unknown;
    /** Whether this resource is marked as inactive or not, whether it's active or inactive. */
    inactive: ButtonclikrApi.PutProfitShareRulesIdRequestInactive;
    /** Whether this resource is marked as frozen or not frozen. */
    frozen: ButtonclikrApi.PutProfitShareRulesIdRequestFrozen;
}
