/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as ButtonclikrApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { PostContactsRequestCountry } from "../../types/PostContactsRequestCountry";
import { PostContactsRequestInactive } from "../../types/PostContactsRequestInactive";
import { PostContactsRequestFrozen } from "../../types/PostContactsRequestFrozen";

export const PostContactsRequest: core.serialization.Schema<
    serializers.PostContactsRequest.Raw,
    ButtonclikrApi.PostContactsRequest
> = core.serialization.object({
    entity: core.serialization.unknown(),
    first: core.serialization.unknown(),
    middle: core.serialization.unknown().optional(),
    last: core.serialization.unknown(),
    description: core.serialization.unknown().optional(),
    email: core.serialization.unknown(),
    address1: core.serialization.unknown().optional(),
    address2: core.serialization.unknown().optional(),
    city: core.serialization.unknown().optional(),
    state: core.serialization.string().optional(),
    zip: core.serialization.unknown().optional(),
    country: PostContactsRequestCountry.optional(),
    phone: core.serialization.unknown().optional(),
    fax: core.serialization.unknown().optional(),
    inactive: PostContactsRequestInactive,
    frozen: PostContactsRequestFrozen,
});

export declare namespace PostContactsRequest {
    interface Raw {
        entity?: unknown;
        first?: unknown;
        middle?: unknown | null;
        last?: unknown;
        description?: unknown | null;
        email?: unknown;
        address1?: unknown | null;
        address2?: unknown | null;
        city?: unknown | null;
        state?: string | null;
        zip?: unknown | null;
        country?: PostContactsRequestCountry.Raw | null;
        phone?: unknown | null;
        fax?: unknown | null;
        inactive: PostContactsRequestInactive.Raw;
        frozen: PostContactsRequestFrozen.Raw;
    }
}
