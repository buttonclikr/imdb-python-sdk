/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as ButtonclikrApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { PostFeesRequestType } from "../../types/PostFeesRequestType";
import { PostFeesRequestSchedule } from "../../types/PostFeesRequestSchedule";
import { PostFeesRequestCollection } from "../../types/PostFeesRequestCollection";
import { PostFeesRequestUm } from "../../types/PostFeesRequestUm";
import { PostFeesRequestCurrency } from "../../types/PostFeesRequestCurrency";
import { PostFeesRequestTxnFee } from "../../types/PostFeesRequestTxnFee";
import { PostFeesRequestInactive } from "../../types/PostFeesRequestInactive";
import { PostFeesRequestFrozen } from "../../types/PostFeesRequestFrozen";

export const PostFeesRequest: core.serialization.Schema<
    serializers.PostFeesRequest.Raw,
    ButtonclikrApi.PostFeesRequest
> = core.serialization.object({
    entity: core.serialization.unknown(),
    forentity: core.serialization.unknown().optional(),
    fromentity: core.serialization.unknown().optional(),
    org: core.serialization.unknown().optional(),
    partition: core.serialization.unknown().optional(),
    type: PostFeesRequestType,
    name: core.serialization.unknown().optional(),
    description: core.serialization.unknown().optional(),
    schedule: PostFeesRequestSchedule,
    scheduleFactor: core.serialization.unknown(),
    start: core.serialization.unknown(),
    finish: core.serialization.unknown().optional(),
    collection: PostFeesRequestCollection.optional(),
    collectionFactor: core.serialization.unknown(),
    collectionOffset: core.serialization.unknown(),
    collectionIncludeCurrent: core.serialization.unknown().optional(),
    um: PostFeesRequestUm,
    amount: core.serialization.unknown(),
    maximum: core.serialization.unknown().optional(),
    currency: PostFeesRequestCurrency,
    txnFee: PostFeesRequestTxnFee,
    inactive: PostFeesRequestInactive,
    frozen: PostFeesRequestFrozen,
});

export declare namespace PostFeesRequest {
    interface Raw {
        entity?: unknown;
        forentity?: unknown | null;
        fromentity?: unknown | null;
        org?: unknown | null;
        partition?: unknown | null;
        type: PostFeesRequestType.Raw;
        name?: unknown | null;
        description?: unknown | null;
        schedule: PostFeesRequestSchedule.Raw;
        scheduleFactor?: unknown;
        start?: unknown;
        finish?: unknown | null;
        collection?: PostFeesRequestCollection.Raw | null;
        collectionFactor?: unknown;
        collectionOffset?: unknown;
        collectionIncludeCurrent?: unknown | null;
        um: PostFeesRequestUm.Raw;
        amount?: unknown;
        maximum?: unknown | null;
        currency: PostFeesRequestCurrency.Raw;
        txnFee: PostFeesRequestTxnFee.Raw;
        inactive: PostFeesRequestInactive.Raw;
        frozen: PostFeesRequestFrozen.Raw;
    }
}
