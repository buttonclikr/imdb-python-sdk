/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as ButtonclikrApi from "../index";

export interface MerchantResponseModel {
    id?: ButtonclikrApi.Id;
    created?: ButtonclikrApi.Created;
    modified?: ButtonclikrApi.Modified;
    creator?: ButtonclikrApi.Creator;
    modifier?: ButtonclikrApi.Modifier;
    /** The date and time on which this Merchant last processed a Transaction. */
    lastActivity?: Date;
    /** Show the total approved amount to this merchant. */
    totalApprovedSales?: string;
    /** The Entity associated with this Merchant. */
    entity?: string;
    /** The name under which the Merchant is doing business, if applicable. This field is stored as a text string and must be between 0 and 50 characters long. */
    dba?: string;
    /** An indicator that specifies whether the Merchant is new to credit card processing. By default, merchants are considered to be new. */
    new?: ButtonclikrApi.MerchantResponseModelNew;
    /** This field allows the ability to submit merchant registration files with a MasterCard (MC) Auth Integrity value. */
    incrementalAuthSupported?: ButtonclikrApi.MerchantResponseModelIncrementalAuthSupported;
    /** Indicates if the merchant is a seasonal merchant or operates year-round. */
    seasonal?: ButtonclikrApi.MerchantResponseModelSeasonal;
    /** Indicates whether the merchant accepts pre-purchase for products that are shipped at a later date or not currently available. */
    advancedBilling?: ButtonclikrApi.MerchantResponseModelAdvancedBilling;
    /**
     * The date on which the Merchant was established.
     * The date is specified as an eight digit string in YYYYMMDD format, for example, '20160120' for January 20, 2016.
     */
    established?: string;
    /**
     * The value of the annual credit card sales of this Merchant.
     * This field is specified as an integer in cents. For example, $25.30 is expressed as '2530'.
     */
    annualCcSales?: string;
    /**
     * The value of the annual credit card sale volume of this Merchant.
     * This field is specified as an integer in cents. For example, $25.30 is expressed as '2530'.
     */
    annualCcSaleVolume?: string;
    /**
     * The value of the annual direct deposit sale volume of this Merchant.
     * This field is specified as an integer in cents. For example, $25.30 is expressed as '2530'.
     */
    annualAchSaleVolume?: string;
    /** Indicates the Annual AMEX Sales Volume for the outlet. */
    amexVolume?: string;
    /**
     * The value of the average credit card sales of this Merchant.
     * This field is specified as an integer in cents. For example, $25.30 is expressed as '2530'.
     */
    avgTicket?: string;
    /**
     * The American Express merchant identifier for this Merchant, if applicable.
     * This field is stored as a text string and must be between 1 and 15 characters long.
     */
    amex?: string;
    /**
     * The Discover merchant identifier for this Merchant, if applicable.
     * This field is stored as a text string and must be between 1 and 15 characters long.
     */
    discover?: string;
    /** The Merchant Category Code (MCC) for this Merchant. This code is not required to create a Merchant, but it is required to successfully board a Merchant. */
    mcc?: string;
    /** Merchant Verification Value. A value assigned by Visa to identify participation in select merchant programs. */
    visaMvv?: string;
    visaDisclosure?: ButtonclikrApi.MerchantResponseModelVisaDisclosure;
    disclosureIp?: string;
    disclosureDate?: string;
    /** The environment which the Merchant is in, if applicable. */
    environment?: ButtonclikrApi.MerchantResponseModelEnvironment;
    /** The status of the Merchant. */
    status?: ButtonclikrApi.MerchantResponseModelStatus;
    autoBoarded?: ButtonclikrApi.MerchantResponseModelAutoBoarded;
    /** The reason for manual or closed status. */
    statusReason?: string;
    accountClosureReasonCode?: string;
    accountClosureReasonDate?: string;
    /** The risk level which the Merchant is in, if applicable. */
    riskLevel?: ButtonclikrApi.MerchantResponseModelRiskLevel;
    /** The credit ratio to use while calculating risk factors for credit, if applicable. */
    creditRatio?: string;
    /** The credit timeliness for the Merchant, if applicable. */
    creditTimeliness?: string;
    chargebackRatio?: string;
    /** The ndx (Non Delivery Exposure) days which the Merchant is in, if applicable. */
    ndxDays?: string;
    /** The ndx (Non Delivery Exposure) percentage to be used for the merchant, if applicable. */
    ndxPercentage?: string;
    /** The date and time on which this Merchant was successfully boarded. */
    boarded?: string;
    tinStatus?: string;
    saqType?: ButtonclikrApi.MerchantResponseModelSaqType;
    saqDate?: string;
    qsa?: string;
    letterStatus?: ButtonclikrApi.MerchantResponseModelLetterStatus;
    letterDate?: string;
    /** Date the tcVersion was last updated. */
    tcDate?: Date;
    tcAttestation?: ButtonclikrApi.MerchantResponseModelTcAttestation;
    tmxSessionId?: string;
    chargebackNotificationEmail?: string;
    /** Whether this resource is marked as inactive. */
    inactive?: ButtonclikrApi.MerchantResponseModelInactive;
    frozen?: unknown;
    /** Description of the type of address that the business operates at. */
    locationType?: ButtonclikrApi.MerchantResponseModelLocationType;
    /** The merchant percentage of transactions that are Card Not Present (Includes MOTO and eCommerce). */
    percentKeyed?: string;
    /** The expected total volume for all credit card and ACH payments that the merchant will process for the current year. */
    totalVolume?: string;
    /** This field indicates what percentage are internet originated transactions. */
    percentEcomm?: string;
    /** This field indicates what percentage of the transactions are Business to Business */
    percentBusiness?: string;
    /** This field indicates if Apple Pay is active for this merchant. */
    applePayActive?: ButtonclikrApi.MerchantResponseModelApplePayActive;
    applePayStatus?: string;
    googlePayActive?: ButtonclikrApi.MerchantResponseModelGooglePayActive;
    /** The NAICS sector code that accurately describes the industry the business operates in. */
    naics?: ButtonclikrApi.MerchantResponseModelNaics;
    /** The NAICS sector description matching the above NAICS sector code. If "Other", industry description is prefixed with "Other: ". */
    naicsDescription?: string;
    /** This field indicates the batch close method for this merchant applicable to Express platform. */
    expressBatchCloseMethod?: ButtonclikrApi.MerchantResponseModelExpressBatchCloseMethod;
    /** This field indicates the batch close time for this merchant applicable to Express platform. */
    expressBatchCloseTime?: string;
    /** This field indicates if Pass Token is enabled for this merchant. */
    passTokenEnabled?: ButtonclikrApi.MerchantResponseModelPassTokenEnabled;
}
