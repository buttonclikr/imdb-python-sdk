/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as ButtonclikrApi from "../../../../index";

/**
 * @example
 *     {
 *         fee: {
 *             "key": "value"
 *         },
 *         entity: {
 *             "key": "value"
 *         },
 *         org: {
 *             "key": "value"
 *         },
 *         fromentity: {
 *             "key": "value"
 *         },
 *         markupUm: ButtonclikrApi.PostFeeModifiersRequestMarkupUm.One,
 *         markupAmount: {
 *             "key": "value"
 *         },
 *         inactive: ButtonclikrApi.PostFeeModifiersRequestInactive.Zero,
 *         frozen: ButtonclikrApi.PostFeeModifiersRequestFrozen.Zero
 *     }
 */
export interface PostFeeModifiersRequest {
    fee?: unknown;
    entity?: unknown;
    org?: unknown;
    fromentity?: unknown;
    /** The unit of measure for the markup amount for the Fee. Valid Values: `1` - Fixed Amount, specified in the 'markupAmount' field as an integer in cents; `2` - Percentage, specified in the 'markupAmount' field in basis points; `3` - TBD. */
    markupUm?: ButtonclikrApi.PostFeeModifiersRequestMarkupUm;
    markupAmount?: unknown;
    /** Whether this resource is marked as inactive. Valid Values: `0` - Active, `1` - Inactive. */
    inactive: ButtonclikrApi.PostFeeModifiersRequestInactive;
    /** Whether this resource is marked as frozen. Valid Values: `0` - Not Frozen, `1` - Frozen. */
    frozen: ButtonclikrApi.PostFeeModifiersRequestFrozen;
}
