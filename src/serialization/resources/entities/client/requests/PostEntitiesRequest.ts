/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as ButtonclikrApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { PostEntitiesRequestState } from "../../types/PostEntitiesRequestState";
import { PostEntitiesRequestCountry } from "../../types/PostEntitiesRequestCountry";
import { PostEntitiesRequestTimezone } from "../../types/PostEntitiesRequestTimezone";
import { PostEntitiesRequestEinType } from "../../types/PostEntitiesRequestEinType";
import { PostEntitiesRequestPendingRiskCheck } from "../../types/PostEntitiesRequestPendingRiskCheck";
import { PostEntitiesRequestCheckStage } from "../../types/PostEntitiesRequestCheckStage";
import { PostEntitiesRequestGlobalBusinessType } from "../../types/PostEntitiesRequestGlobalBusinessType";
import { Frozen } from "../../../../types/Frozen";
import { Inactive } from "../../../../types/Inactive";

export const PostEntitiesRequest: core.serialization.Schema<
    serializers.PostEntitiesRequest.Raw,
    ButtonclikrApi.PostEntitiesRequest
> = core.serialization.object({
    clientIp: core.serialization.string(),
    login: core.serialization.string(),
    firstDisbursement: core.serialization.string().optional(),
    totalCreditDisbursements: core.serialization.number(),
    type: core.serialization.number(),
    name: core.serialization.string(),
    displayName: core.serialization.string().optional(),
    address1: core.serialization.string(),
    address2: core.serialization.string().optional(),
    city: core.serialization.string(),
    state: PostEntitiesRequestState,
    zip: core.serialization.string(),
    country: PostEntitiesRequestCountry,
    timezone: PostEntitiesRequestTimezone,
    phone: core.serialization.string(),
    customerPhone: core.serialization.string().optional(),
    fax: core.serialization.string().optional(),
    email: core.serialization.string(),
    website: core.serialization.string().optional(),
    appleDomain: core.serialization.string().optional(),
    einType: PostEntitiesRequestEinType.optional(),
    irsFilingName: core.serialization.string().optional(),
    ein: core.serialization.string(),
    locations: core.serialization.number(),
    public: core.serialization.number(),
    tcVersion: core.serialization.string().optional(),
    tcAcceptDate: core.serialization.number().optional(),
    tcAcceptIp: core.serialization.string().optional(),
    custom: core.serialization.number().optional(),
    reserved: core.serialization.number(),
    pendingRiskCheck: PostEntitiesRequestPendingRiskCheck.optional(),
    checkStage: PostEntitiesRequestCheckStage.optional(),
    payoutSecondaryDescriptor: core.serialization.string().optional(),
    industry: core.serialization.string().optional(),
    globalBusinessType: PostEntitiesRequestGlobalBusinessType.optional(),
    globalBusinessId: core.serialization.string(),
    frozen: Frozen,
    inactive: Inactive,
});

export declare namespace PostEntitiesRequest {
    interface Raw {
        clientIp: string;
        login: string;
        firstDisbursement?: string | null;
        totalCreditDisbursements: number;
        type: number;
        name: string;
        displayName?: string | null;
        address1: string;
        address2?: string | null;
        city: string;
        state: PostEntitiesRequestState.Raw;
        zip: string;
        country: PostEntitiesRequestCountry.Raw;
        timezone: PostEntitiesRequestTimezone.Raw;
        phone: string;
        customerPhone?: string | null;
        fax?: string | null;
        email: string;
        website?: string | null;
        appleDomain?: string | null;
        einType?: PostEntitiesRequestEinType.Raw | null;
        irsFilingName?: string | null;
        ein: string;
        locations: number;
        public: number;
        tcVersion?: string | null;
        tcAcceptDate?: number | null;
        tcAcceptIp?: string | null;
        custom?: number | null;
        reserved: number;
        pendingRiskCheck?: PostEntitiesRequestPendingRiskCheck.Raw | null;
        checkStage?: PostEntitiesRequestCheckStage.Raw | null;
        payoutSecondaryDescriptor?: string | null;
        industry?: string | null;
        globalBusinessType?: PostEntitiesRequestGlobalBusinessType.Raw | null;
        globalBusinessId: string;
        frozen: Frozen.Raw;
        inactive: Inactive.Raw;
    }
}
