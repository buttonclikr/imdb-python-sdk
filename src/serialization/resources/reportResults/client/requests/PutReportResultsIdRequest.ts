/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as ButtonclikrApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { PutReportResultsIdRequestDocumentType } from "../../types/PutReportResultsIdRequestDocumentType";
import { PutReportResultsIdRequestStatus } from "../../types/PutReportResultsIdRequestStatus";
import { PutReportResultsIdRequestInactive } from "../../types/PutReportResultsIdRequestInactive";
import { PutReportResultsIdRequestFrozen } from "../../types/PutReportResultsIdRequestFrozen";

export const PutReportResultsIdRequest: core.serialization.Schema<
    serializers.PutReportResultsIdRequest.Raw,
    ButtonclikrApi.PutReportResultsIdRequest
> = core.serialization.object({
    report: core.serialization.unknown(),
    documentType: PutReportResultsIdRequestDocumentType,
    status: PutReportResultsIdRequestStatus,
    effective: core.serialization.unknown().optional(),
    inactive: PutReportResultsIdRequestInactive,
    frozen: PutReportResultsIdRequestFrozen,
});

export declare namespace PutReportResultsIdRequest {
    interface Raw {
        report?: unknown;
        documentType: PutReportResultsIdRequestDocumentType.Raw;
        status: PutReportResultsIdRequestStatus.Raw;
        effective?: unknown | null;
        inactive: PutReportResultsIdRequestInactive.Raw;
        frozen: PutReportResultsIdRequestFrozen.Raw;
    }
}
