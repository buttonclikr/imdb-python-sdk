/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as ButtonclikrApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { PostChargebacksRequestCurrency } from "../../types/PostChargebacksRequestCurrency";
import { PostChargebacksRequestPlatform } from "../../types/PostChargebacksRequestPlatform";
import { PostChargebacksRequestPaymentMethod } from "../../types/PostChargebacksRequestPaymentMethod";
import { PostChargebacksRequestCycle } from "../../types/PostChargebacksRequestCycle";
import { PostChargebacksRequestStatus } from "../../types/PostChargebacksRequestStatus";
import { PostChargebacksRequestActionable } from "../../types/PostChargebacksRequestActionable";
import { PostChargebacksRequestShadow } from "../../types/PostChargebacksRequestShadow";
import { PostChargebacksRequestInactive } from "../../types/PostChargebacksRequestInactive";
import { PostChargebacksRequestFrozen } from "../../types/PostChargebacksRequestFrozen";

export const PostChargebacksRequest: core.serialization.Schema<
    serializers.PostChargebacksRequest.Raw,
    ButtonclikrApi.PostChargebacksRequest
> = core.serialization.object({
    txn: core.serialization.unknown().optional(),
    merchant: core.serialization.unknown(),
    mid: core.serialization.unknown(),
    total: core.serialization.unknown(),
    representedTotal: core.serialization.unknown().optional(),
    description: core.serialization.unknown().optional(),
    currency: PostChargebacksRequestCurrency,
    platform: PostChargebacksRequestPlatform,
    paymentMethod: PostChargebacksRequestPaymentMethod.optional(),
    ref: core.serialization.unknown(),
    cycle: PostChargebacksRequestCycle,
    reason: core.serialization.unknown().optional(),
    reasonCode: core.serialization.unknown().optional(),
    issued: core.serialization.unknown().optional(),
    received: core.serialization.unknown().optional(),
    reply: core.serialization.unknown().optional(),
    bankRef: core.serialization.unknown().optional(),
    chargebackRef: core.serialization.unknown().optional(),
    status: PostChargebacksRequestStatus,
    lastStatusChange: core.serialization.unknown().optional(),
    actionable: PostChargebacksRequestActionable,
    shadow: PostChargebacksRequestShadow.optional(),
    inactive: PostChargebacksRequestInactive,
    frozen: PostChargebacksRequestFrozen,
});

export declare namespace PostChargebacksRequest {
    interface Raw {
        txn?: unknown | null;
        merchant?: unknown;
        mid?: unknown;
        total?: unknown;
        representedTotal?: unknown | null;
        description?: unknown | null;
        currency: PostChargebacksRequestCurrency.Raw;
        platform: PostChargebacksRequestPlatform.Raw;
        paymentMethod?: PostChargebacksRequestPaymentMethod.Raw | null;
        ref?: unknown;
        cycle: PostChargebacksRequestCycle.Raw;
        reason?: unknown | null;
        reasonCode?: unknown | null;
        issued?: unknown | null;
        received?: unknown | null;
        reply?: unknown | null;
        bankRef?: unknown | null;
        chargebackRef?: unknown | null;
        status: PostChargebacksRequestStatus.Raw;
        lastStatusChange?: unknown | null;
        actionable: PostChargebacksRequestActionable.Raw;
        shadow?: PostChargebacksRequestShadow.Raw | null;
        inactive: PostChargebacksRequestInactive.Raw;
        frozen: PostChargebacksRequestFrozen.Raw;
    }
}
