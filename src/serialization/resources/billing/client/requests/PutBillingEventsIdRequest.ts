/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as ButtonclikrApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { PutBillingEventsIdRequestEvent } from "../../types/PutBillingEventsIdRequestEvent";
import { PutBillingEventsIdRequestDeductFromBalance } from "../../types/PutBillingEventsIdRequestDeductFromBalance";
import { PutBillingEventsIdRequestInactive } from "../../types/PutBillingEventsIdRequestInactive";
import { PutBillingEventsIdRequestFrozen } from "../../types/PutBillingEventsIdRequestFrozen";

export const PutBillingEventsIdRequest: core.serialization.Schema<
    serializers.PutBillingEventsIdRequest.Raw,
    ButtonclikrApi.PutBillingEventsIdRequest
> = core.serialization.object({
    billing: core.serialization.unknown(),
    event: PutBillingEventsIdRequestEvent,
    eventSchedule: core.serialization.unknown().optional(),
    deductFromBalance: PutBillingEventsIdRequestDeductFromBalance,
    inactive: PutBillingEventsIdRequestInactive,
    frozen: PutBillingEventsIdRequestFrozen,
});

export declare namespace PutBillingEventsIdRequest {
    interface Raw {
        billing?: unknown;
        event: PutBillingEventsIdRequestEvent.Raw;
        eventSchedule?: unknown | null;
        deductFromBalance: PutBillingEventsIdRequestDeductFromBalance.Raw;
        inactive: PutBillingEventsIdRequestInactive.Raw;
        frozen: PutBillingEventsIdRequestFrozen.Raw;
    }
}
