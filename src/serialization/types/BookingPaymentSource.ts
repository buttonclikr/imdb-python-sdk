/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as ButtonclikrApi from "../../api/index";
import * as core from "../../core";
import { Card } from "./Card";
import { BookingPaymentSourceBankAccount } from "./BookingPaymentSourceBankAccount";

export const BookingPaymentSource: core.serialization.Schema<
    serializers.BookingPaymentSource.Raw,
    ButtonclikrApi.BookingPaymentSource
> = core.serialization
    .union("object", {
        card: Card,
        bank_account: BookingPaymentSourceBankAccount,
    })
    .transform<ButtonclikrApi.BookingPaymentSource>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace BookingPaymentSource {
    type Raw = BookingPaymentSource.Card | BookingPaymentSource.BankAccount;

    interface Card extends Card.Raw {
        object: "card";
    }

    interface BankAccount extends BookingPaymentSourceBankAccount.Raw {
        object: "bank_account";
    }
}
