/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as ButtonclikrApi from "../../../../index";

/**
 * @example
 *     {
 *         chargeback: {
 *             "key": "value"
 *         },
 *         date: {
 *             "key": "value"
 *         },
 *         type: ButtonclikrApi.PostChargebackMessagesRequestType.Assign,
 *         fromQueue: {
 *             "key": "value"
 *         },
 *         toQueue: {
 *             "key": "value"
 *         },
 *         contact: {
 *             "key": "value"
 *         },
 *         amount: {
 *             "key": "value"
 *         },
 *         currency: ButtonclikrApi.PostChargebackMessagesRequestCurrency.Aed,
 *         note: {
 *             "key": "value"
 *         },
 *         status: ButtonclikrApi.PostChargebackMessagesRequestStatus.Requested,
 *         imported: ButtonclikrApi.PostChargebackMessagesRequestImported.Zero,
 *         inactive: ButtonclikrApi.PostChargebackMessagesRequestInactive.Zero,
 *         frozen: ButtonclikrApi.PostChargebackMessagesRequestFrozen.Zero
 *     }
 */
export interface PostChargebackMessagesRequest {
    chargeback?: unknown;
    date?: unknown;
    /** The type of this chargebackMessage. Valid Values: `assign` - TBD, `notate` - TBD, `acceptLiability` - Accept Liability for the Chargeback amount, `createPreArbitration` - TBD, `represent` - TBD, `respond` - TBD, `requestArbitration` - Request Arbitration. The Merchant wishes to enter arbitration to determine the outcome of the Chargeback, `createArbitration` - TBD, `requestPreArbitration` - TBD, `requestResolutionToPreArbitration` - TBD, `respondToDispute` - TBD, `respondToPreArbitration` - TBD, `unaccept` - TBD. */
    type: ButtonclikrApi.PostChargebackMessagesRequestType;
    fromQueue?: unknown;
    toQueue?: unknown;
    contact?: unknown;
    amount?: unknown;
    /** The currency of the amount in this chargebackMessage and assessments resource. */
    currency?: ButtonclikrApi.PostChargebackMessagesRequestCurrency;
    note?: unknown;
    /** The current status of the Chargeback, which can be either 'requested', 'processing', 'failed', 'denied', or 'processed'. */
    status: ButtonclikrApi.PostChargebackMessagesRequestStatus;
    /**
     * TBD
     *
     * <details>
     * <summary>Valid Values</summary>
     *
     * - `0` - **Imported**
     *
     * - `1` - **Not imported**
     * </details>
     *
     */
    imported: ButtonclikrApi.PostChargebackMessagesRequestImported;
    /** Whether this resource is marked as inactive. Valid Values: `0` - Active, `1` - Inactive. */
    inactive: ButtonclikrApi.PostChargebackMessagesRequestInactive;
    /** Whether this resource is marked as frozen. Valid Values: `0` - Not Frozen, `1` - Frozen. */
    frozen: ButtonclikrApi.PostChargebackMessagesRequestFrozen;
}
