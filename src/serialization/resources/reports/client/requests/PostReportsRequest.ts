/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as ButtonclikrApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { PostReportsRequestType } from "../../types/PostReportsRequestType";
import { PostReportsRequestStatus } from "../../types/PostReportsRequestStatus";
import { PostReportsRequestSchedule } from "../../types/PostReportsRequestSchedule";
import { PostReportsRequestInactive } from "../../types/PostReportsRequestInactive";
import { PostReportsRequestFrozen } from "../../types/PostReportsRequestFrozen";

export const PostReportsRequest: core.serialization.Schema<
    serializers.PostReportsRequest.Raw,
    ButtonclikrApi.PostReportsRequest
> = core.serialization.object({
    login: core.serialization.unknown(),
    type: PostReportsRequestType,
    description: core.serialization.unknown().optional(),
    status: PostReportsRequestStatus,
    schedule: PostReportsRequestSchedule,
    start: core.serialization.unknown(),
    finish: core.serialization.unknown().optional(),
    inactive: PostReportsRequestInactive,
    frozen: PostReportsRequestFrozen,
});

export declare namespace PostReportsRequest {
    interface Raw {
        login?: unknown;
        type: PostReportsRequestType.Raw;
        description?: unknown | null;
        status: PostReportsRequestStatus.Raw;
        schedule: PostReportsRequestSchedule.Raw;
        start?: unknown;
        finish?: unknown | null;
        inactive: PostReportsRequestInactive.Raw;
        frozen: PostReportsRequestFrozen.Raw;
    }
}
