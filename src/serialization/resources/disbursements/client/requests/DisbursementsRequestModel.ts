/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as ButtonclikrApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { DisbursementsRequestModelDisbursementEntriesStatus } from "../../types/DisbursementsRequestModelDisbursementEntriesStatus";

export const DisbursementsRequestModel: core.serialization.Schema<
    serializers.DisbursementsRequestModel.Raw,
    ButtonclikrApi.DisbursementsRequestModel
> = core.serialization.object({
    payment: core.serialization.string().optional(),
    statement: core.serialization.string().optional(),
    settlement: core.serialization.string().optional(),
    originalDisbursement: core.serialization.string().optional(),
    description: core.serialization.string().optional(),
    secondaryDescriptor: core.serialization.string().optional(),
    amount: core.serialization.number(),
    returnedAmount: core.serialization.number().optional(),
    deletedDisbursementEntries: core.serialization.number(),
    disbursementEntriesStatus: DisbursementsRequestModelDisbursementEntriesStatus,
    lastNegativeEntry: core.serialization.string().optional(),
    lastNegativePendingEntry: core.serialization.string().optional(),
    lastPositiveReserveEntry: core.serialization.string().optional(),
    lastPositiveEntry: core.serialization.string().optional(),
    lastPositivePendingEntry: core.serialization.string().optional(),
    lastNegativeReserveEntry: core.serialization.string().optional(),
    status: core.serialization.number(),
    fundingStatus: core.serialization.string().optional(),
    expiration: core.serialization.string().optional(),
    sameDay: core.serialization.number(),
});

export declare namespace DisbursementsRequestModel {
    interface Raw {
        payment?: string | null;
        statement?: string | null;
        settlement?: string | null;
        originalDisbursement?: string | null;
        description?: string | null;
        secondaryDescriptor?: string | null;
        amount: number;
        returnedAmount?: number | null;
        deletedDisbursementEntries: number;
        disbursementEntriesStatus: DisbursementsRequestModelDisbursementEntriesStatus.Raw;
        lastNegativeEntry?: string | null;
        lastNegativePendingEntry?: string | null;
        lastPositiveReserveEntry?: string | null;
        lastPositiveEntry?: string | null;
        lastPositivePendingEntry?: string | null;
        lastNegativeReserveEntry?: string | null;
        status: number;
        fundingStatus?: string | null;
        expiration?: string | null;
        sameDay: number;
    }
}
