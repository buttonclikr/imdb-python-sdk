/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as ButtonclikrApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { TerminalTxnsUpdateReqBodySchemaModelBinType } from "../../types/TerminalTxnsUpdateReqBodySchemaModelBinType";
import { TerminalTxnsEntryModeProperty } from "../../../../types/TerminalTxnsEntryModeProperty";
import { Inactive } from "../../../../types/Inactive";
import { Frozen } from "../../../../types/Frozen";

export const TerminalTxnsUpdateReqBodySchemaModel: core.serialization.Schema<
    serializers.TerminalTxnsUpdateReqBodySchemaModel.Raw,
    ButtonclikrApi.TerminalTxnsUpdateReqBodySchemaModel
> = core.serialization.object({
    binType: TerminalTxnsUpdateReqBodySchemaModelBinType,
    expiration: core.serialization.string().optional(),
    payment: core.serialization.string().optional(),
    traceNumber: core.serialization.number().optional(),
    txn: core.serialization.string().optional(),
    token: core.serialization.string().optional(),
    paymentNumber: core.serialization.number().optional(),
    paymentMethod: core.serialization.number().optional(),
    tip: core.serialization.number().optional(),
    originatingApp: core.serialization.string().optional(),
    oemtTxnRefNumber: core.serialization.property("OEMTTxnRefNumber", core.serialization.string().optional()),
    posApplicationId: core.serialization.string().optional(),
    posApplicationName: core.serialization.string().optional(),
    posApplicationVersion: core.serialization.string().optional(),
    customerReferenceNumber: core.serialization.string().optional(),
    gatewayTransactionId: core.serialization.string().optional(),
    customerTicketNumber: core.serialization.string().optional(),
    clientIp: core.serialization.string().optional(),
    description: core.serialization.string().optional(),
    swiped: core.serialization.number(),
    emv: core.serialization.number(),
    entryMode: TerminalTxnsEntryModeProperty.optional(),
    feeConsumed: core.serialization.unknown().optional(),
    first: core.serialization.string().optional(),
    last: core.serialization.string().optional(),
    middle: core.serialization.string().optional(),
    order: core.serialization.string().optional(),
    reserved: core.serialization.number(),
    signature: core.serialization.number(),
    total: core.serialization.number(),
    status: core.serialization.number(),
    inactive: Inactive,
    frozen: Frozen,
});

export declare namespace TerminalTxnsUpdateReqBodySchemaModel {
    interface Raw {
        binType: TerminalTxnsUpdateReqBodySchemaModelBinType.Raw;
        expiration?: string | null;
        payment?: string | null;
        traceNumber?: number | null;
        txn?: string | null;
        token?: string | null;
        paymentNumber?: number | null;
        paymentMethod?: number | null;
        tip?: number | null;
        originatingApp?: string | null;
        OEMTTxnRefNumber?: string | null;
        posApplicationId?: string | null;
        posApplicationName?: string | null;
        posApplicationVersion?: string | null;
        customerReferenceNumber?: string | null;
        gatewayTransactionId?: string | null;
        customerTicketNumber?: string | null;
        clientIp?: string | null;
        description?: string | null;
        swiped: number;
        emv: number;
        entryMode?: TerminalTxnsEntryModeProperty.Raw | null;
        feeConsumed?: unknown | null;
        first?: string | null;
        last?: string | null;
        middle?: string | null;
        order?: string | null;
        reserved: number;
        signature: number;
        total: number;
        status: number;
        inactive: Inactive.Raw;
        frozen: Frozen.Raw;
    }
}
