/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as ButtonclikrApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { PutFeesIdRequestType } from "../../types/PutFeesIdRequestType";
import { PutFeesIdRequestSchedule } from "../../types/PutFeesIdRequestSchedule";
import { PutFeesIdRequestCollection } from "../../types/PutFeesIdRequestCollection";
import { PutFeesIdRequestUm } from "../../types/PutFeesIdRequestUm";
import { PutFeesIdRequestCurrency } from "../../types/PutFeesIdRequestCurrency";
import { PutFeesIdRequestTxnFee } from "../../types/PutFeesIdRequestTxnFee";
import { PutFeesIdRequestInactive } from "../../types/PutFeesIdRequestInactive";
import { PutFeesIdRequestFrozen } from "../../types/PutFeesIdRequestFrozen";

export const PutFeesIdRequest: core.serialization.Schema<
    serializers.PutFeesIdRequest.Raw,
    ButtonclikrApi.PutFeesIdRequest
> = core.serialization.object({
    entity: core.serialization.unknown(),
    forentity: core.serialization.unknown().optional(),
    fromentity: core.serialization.unknown().optional(),
    org: core.serialization.unknown().optional(),
    partition: core.serialization.unknown().optional(),
    type: PutFeesIdRequestType,
    name: core.serialization.unknown().optional(),
    description: core.serialization.unknown().optional(),
    schedule: PutFeesIdRequestSchedule,
    scheduleFactor: core.serialization.unknown(),
    start: core.serialization.unknown(),
    finish: core.serialization.unknown().optional(),
    collection: PutFeesIdRequestCollection.optional(),
    collectionFactor: core.serialization.unknown(),
    collectionOffset: core.serialization.unknown(),
    collectionIncludeCurrent: core.serialization.unknown().optional(),
    um: PutFeesIdRequestUm,
    amount: core.serialization.unknown(),
    maximum: core.serialization.unknown().optional(),
    currency: PutFeesIdRequestCurrency,
    txnFee: PutFeesIdRequestTxnFee,
    inactive: PutFeesIdRequestInactive,
    frozen: PutFeesIdRequestFrozen,
    sscheduleFactor: core.serialization.unknown().optional(),
});

export declare namespace PutFeesIdRequest {
    interface Raw {
        entity?: unknown;
        forentity?: unknown | null;
        fromentity?: unknown | null;
        org?: unknown | null;
        partition?: unknown | null;
        type: PutFeesIdRequestType.Raw;
        name?: unknown | null;
        description?: unknown | null;
        schedule: PutFeesIdRequestSchedule.Raw;
        scheduleFactor?: unknown;
        start?: unknown;
        finish?: unknown | null;
        collection?: PutFeesIdRequestCollection.Raw | null;
        collectionFactor?: unknown;
        collectionOffset?: unknown;
        collectionIncludeCurrent?: unknown | null;
        um: PutFeesIdRequestUm.Raw;
        amount?: unknown;
        maximum?: unknown | null;
        currency: PutFeesIdRequestCurrency.Raw;
        txnFee: PutFeesIdRequestTxnFee.Raw;
        inactive: PutFeesIdRequestInactive.Raw;
        frozen: PutFeesIdRequestFrozen.Raw;
        sscheduleFactor?: unknown | null;
    }
}
