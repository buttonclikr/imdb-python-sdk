/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as ButtonclikrApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { PutInvoicesIdRequestAllowedPaymentMethods } from "../../types/PutInvoicesIdRequestAllowedPaymentMethods";
import { PutInvoicesIdRequestStatus } from "../../types/PutInvoicesIdRequestStatus";
import { PutInvoicesIdRequestEmailStatus } from "../../types/PutInvoicesIdRequestEmailStatus";
import { PutInvoicesIdRequestType } from "../../types/PutInvoicesIdRequestType";
import { PutInvoicesIdRequestInactive } from "../../types/PutInvoicesIdRequestInactive";
import { PutInvoicesIdRequestFrozen } from "../../types/PutInvoicesIdRequestFrozen";

export const PutInvoicesIdRequest: core.serialization.Schema<
    serializers.PutInvoicesIdRequest.Raw,
    ButtonclikrApi.PutInvoicesIdRequest
> = core.serialization.object({
    login: core.serialization.unknown(),
    merchant: core.serialization.unknown(),
    customer: core.serialization.unknown().optional(),
    subscription: core.serialization.unknown(),
    allowedPaymentMethods: PutInvoicesIdRequestAllowedPaymentMethods.optional(),
    title: core.serialization.unknown().optional(),
    message: core.serialization.unknown().optional(),
    total: core.serialization.unknown().optional(),
    tax: core.serialization.unknown().optional(),
    discount: core.serialization.unknown().optional(),
    dueDate: core.serialization.unknown().optional(),
    expirationDate: core.serialization.unknown().optional(),
    sendOn: core.serialization.unknown().optional(),
    status: PutInvoicesIdRequestStatus,
    emailStatus: PutInvoicesIdRequestEmailStatus,
    emails: core.serialization.unknown().optional(),
    type: PutInvoicesIdRequestType,
    inactive: PutInvoicesIdRequestInactive,
    frozen: PutInvoicesIdRequestFrozen,
});

export declare namespace PutInvoicesIdRequest {
    interface Raw {
        login?: unknown;
        merchant?: unknown;
        customer?: unknown | null;
        subscription?: unknown;
        allowedPaymentMethods?: PutInvoicesIdRequestAllowedPaymentMethods.Raw | null;
        title?: unknown | null;
        message?: unknown | null;
        total?: unknown | null;
        tax?: unknown | null;
        discount?: unknown | null;
        dueDate?: unknown | null;
        expirationDate?: unknown | null;
        sendOn?: unknown | null;
        status: PutInvoicesIdRequestStatus.Raw;
        emailStatus: PutInvoicesIdRequestEmailStatus.Raw;
        emails?: unknown | null;
        type: PutInvoicesIdRequestType.Raw;
        inactive: PutInvoicesIdRequestInactive.Raw;
        frozen: PutInvoicesIdRequestFrozen.Raw;
    }
}
