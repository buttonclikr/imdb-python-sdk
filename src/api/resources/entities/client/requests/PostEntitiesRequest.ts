/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as ButtonclikrApi from "../../../../index";

/**
 * @example
 *     {
 *         clientIp: "clientIp",
 *         login: "p1_log_5a1ef5e55653ed720159d53",
 *         totalCreditDisbursements: 1,
 *         type: 1,
 *         name: "Smith Company LLC",
 *         address1: "123 North 12 St",
 *         city: "Miami",
 *         state: ButtonclikrApi.PostEntitiesRequestState.Ab,
 *         zip: "33024",
 *         country: ButtonclikrApi.PostEntitiesRequestCountry.Usa,
 *         timezone: ButtonclikrApi.PostEntitiesRequestTimezone.Est,
 *         phone: "1234567891",
 *         email: "support@example.com",
 *         website: "http://www.example.com",
 *         ein: "123456789",
 *         locations: 1,
 *         public: 0,
 *         reserved: 1,
 *         globalBusinessId: "globalBusinessId",
 *         frozen: 1,
 *         inactive: 1
 *     }
 */
export interface PostEntitiesRequest {
    /** The client ip address from which the Entity was created. Valid values are any Ipv4 or Ipv6 address. */
    clientIp: string;
    /** The Login that owns this resource. */
    login: string;
    /** First Disbursement */
    firstDisbursement?: string;
    /** The maximum credit to be provided. */
    totalCreditDisbursements: number;
    /**
     * The action taken on the referenced Txn. Block, Hold, or Reserve it.
     * <details>
     * <summary>Valid Values</summary>
     *
     *  - `0` - Sole Proprietorship
     *
     *  - `1` - Corporation
     *
     *  - `2` - Limited Liability Company
     *
     *  - `3` - Partnership
     *
     *  - `5` - Non-Profit Organization
     *
     *  - `6` - Government Organization
     *
     *  - `7` - C Corporation
     *
     *  - `8` - S Corporation.
     *
     *
     * </details>
     *
     */
    type: number;
    /**
     * The name of this Entity.
     * This field is stored as a string string and must be between 1 and 100 characters long.
     */
    name: string;
    /**
     * The display name of this Entity.
     * This field is stored as a string and must be between 1 and 1000 characters long.
     */
    displayName?: string;
    /**
     * The first line of the address associated with this Entity.
     * This field is stored as a string and must be between 1 and 500 characters long.
     */
    address1: string;
    /**
     * The second line of the address associated with this Entity.
     * This field is stored as a string and must be between 1 and 500 characters long.
     */
    address2?: string;
    /**
     * The name of the city in the address associated with this Entity.
     * This field is stored as a string and must be between 1 and 500 characters long.
     */
    city: string;
    /**
     * A client-supplied description for this bank account.
     * This field is stored as a text string and must be between 0 and 100 characters long.
     */
    state: ButtonclikrApi.PostEntitiesRequestState;
    /**
     * The ZIP code in the address associated with this Entity.
     * This field is stored as a text string and must be between 1 and 20 characters long.
     */
    zip: string;
    /** The country in the address associated with the Entity, currently accepting values including 'USA', CAN. */
    country: ButtonclikrApi.PostEntitiesRequestCountry;
    /**
     * The timezone for the address associated with the terminal''s location.
     *
     * <details>
     * <summary>Valid Values</summary>
     *
     *   - `est` - **Eastern Standard Time**
     *
     *  - `pst` - **Pacific Standard Time**
     *
     *  - `cst` - **Central Standard Time**
     *
     *  - `mst` - **Mountain Daylight Time**
     *
     *  - `akst` - **Alaska Standard Time**
     *
     *  - `hst` - **Hawaii Standard Time**
     *
     *  - `sst` - **Samoa Standard Time**
     *
     *  - `chst` - **Chamorro Standard Time**
     *
     *   - `ast`  - **Atlantic Standard Time**
     *
     *  - `pwt` - **Palau Time**
     *
     *  - `mht` - **Marshall Islands Time**
     *
     *  - `chut` - **Chuuk Time**
     *
     *  - `nst` - **Newfoundland Standard Time**
     *
     *  </details>
     *
     */
    timezone: ButtonclikrApi.PostEntitiesRequestTimezone;
    /**
     * The phone number associated with this Entity.
     * This field is stored as a text string and must be between 5 and 15 characters long.
     */
    phone: string;
    /**
     * The customer service phone number associated with this Entity. For Merchants, this number will be displayed on the customer's credit card statement.
     * This field is stored as a text string and must be between 5 and 15 characters long.
     */
    customerPhone?: string;
    /**
     * The fax number associated with this Entity.
     * This field is stored as a text string and must be between 5 and 15 characters long.
     */
    fax?: string;
    /**
     * The email address associated with this Entity.
     * This field is stored as a text string and must be between 1 and 100 characters long.
     */
    email: string;
    /**
     * The web site URL associated with this Entity.
     * This field is stored as a text string and must be between 0 and 500 characters long.
     */
    website?: string;
    /**
     * The web sites URL associated with this Entity.
     * This field is stored as a text string, must be between 0 and 1000 characters long and separated by comma
     */
    appleDomain?: string;
    /** Indicates if the TIN being used is an EIN, SSN, or ''other/unknown'' number. Valid Values: `ssn` - Social Security Number, `tin` - Employer Identification Number, `other` - Other/Unknown TIN. */
    einType?: ButtonclikrApi.PostEntitiesRequestEinType;
    /** The IRS Legal Filing Name. This must match what has been provided to the IRS when filing taxes. */
    irsFilingName?: string;
    /**
     * The IRS Employer Number (EIN) for the Entity.
     * This field is stored as an interger and must be 9 characters long.
     */
    ein: string;
    /**
     * The number of locations at which this Entity does business.
     * This field is stored as an integer and must be between 1 and 1000000 characters long.
     */
    locations: number;
    /** Indicates whether this is a publicly held entity, with valid values being '0' for private entity and '1' for public entity. */
    public: number;
    /**
     * An indicator showing the version of the terms and conditions that this Entity has accepted. The API indicates the version as a string.
     * This field is stored as a text string and must be between 0 and 20 characters long.
     */
    tcVersion?: string;
    /**
     * Date and time on which this Entity accepted the Terms and Conditions, if different than tcDate.
     * The date is specified as a twelve digit string in YYYYMMDDHHII format, for example, '201601201528' for January 20, 2016 at 15:28 (3:28 pm).
     */
    tcAcceptDate?: number;
    /** IP address from which this Entity accepted the Terms and Conditions, if different than tcIp. */
    tcAcceptIp?: string;
    /** Custom, free-form field for client-supplied text, must be between 0 and 1000 characters long. */
    custom?: number;
    /**
     *
     * <details>
     * <summary>Valid Values</summary>
     *
     *   - `0` - **No reserve.**
     *
     *   - `1` - **Transaction processing withheld.**
     *
     *  - `3` - **Transaction capture withheld pending manual review.**
     *
     *  - `4` - **Move all funds from this Transaction into a reserve.**
     *
     *  - `5` - **Block current activity, no change for merchant.**
     *
     *    - `6` - **Will not be set anywhere, will only be used for integration purposes.**
     *
     *   - `7` - **We did not have policies to process.**
     *
     *  - `8` - **We onboard the merchant and wait for manual check later.**
     *
     *  </details>
     *
     */
    reserved: number;
    /** Whether it is pending a risk check. */
    pendingRiskCheck?: ButtonclikrApi.PostEntitiesRequestPendingRiskCheck;
    /**
     * The last stage completed for risk underwriting review.
     *
     * <details>
     * <summary>Valid Values</summary>
     *
     *    - createEntity  -  **Merchant created.** No Signup Form submitted.
     *
     *    - underwriting  -  **Risk/Underwriting Review.** Merchant Signup Form submitted.
     *
     *    - preboard  -  **Preboard.** Check the Merchant before they are boarded.
     *
     *    - postboard  -  **Check the Merchant after they are boarded.**
     *
     *    - txn  -  **Check the Merchant when they process a Transaction.**
     *
     *    - txnVolume  -  **Check the Merchant when their transaction volume hits a certain amount.**
     *
     *    - payout  -  **Check the Merchant when a Payout occurs.**
     *
     *    - payoutVolume  -  **Check the Merchant when the volume of Payouts to the Merchant hits a certain amount.**
     *
     * </details>
     */
    checkStage?: ButtonclikrApi.PostEntitiesRequestCheckStage;
    /** The secondary billing descriptor to appear on the bank statements for funds transfer for the entity. */
    payoutSecondaryDescriptor?: string;
    /** This field is stored as a text string and must be between 0 and 1000 characters long. */
    industry?: string;
    /** The business registration type for the entity. */
    globalBusinessType?: ButtonclikrApi.PostEntitiesRequestGlobalBusinessType;
    /**
     * The business registration number for the entity.
     * This field is stored as an alpha numeric and must be between 9 to 10 characters long
     */
    globalBusinessId: string;
    frozen: ButtonclikrApi.Frozen;
    inactive: ButtonclikrApi.Inactive;
}
