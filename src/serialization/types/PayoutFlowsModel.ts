/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as ButtonclikrApi from "../../api/index";
import * as core from "../../core";
import { Id } from "./Id";
import { Created } from "./Created";
import { Modified } from "./Modified";
import { Creator } from "./Creator";
import { Modifier } from "./Modifier";
import { PayoutFlowsModelTrigger } from "./PayoutFlowsModelTrigger";
import { PayoutFlowsModelSchedule } from "./PayoutFlowsModelSchedule";
import { PayoutFlowsModelCurrency } from "./PayoutFlowsModelCurrency";
import { Frozen } from "./Frozen";
import { Inactive } from "./Inactive";

export const PayoutFlowsModel: core.serialization.ObjectSchema<
    serializers.PayoutFlowsModel.Raw,
    ButtonclikrApi.PayoutFlowsModel
> = core.serialization.object({
    id: Id.optional(),
    created: Created.optional(),
    modified: Modified.optional(),
    creator: Creator.optional(),
    modifier: Modifier.optional(),
    login: core.serialization.string().optional(),
    payoutLogin: core.serialization.string().optional(),
    org: core.serialization.string().optional(),
    division: core.serialization.string().optional(),
    partition: core.serialization.string().optional(),
    entity: core.serialization.string().optional(),
    billing: core.serialization.string().optional(),
    trigger: PayoutFlowsModelTrigger.optional(),
    schedule: PayoutFlowsModelSchedule.optional(),
    scheduleFactor: core.serialization.number().optional(),
    start: core.serialization.number().optional(),
    um: core.serialization.string().optional(),
    amount: core.serialization.number().optional(),
    minimum: core.serialization.number().optional(),
    secondaryDescriptor: core.serialization.string().optional(),
    payoutInactive: core.serialization.number().optional(),
    skipOffDays: core.serialization.number().optional(),
    sameDay: core.serialization.number().optional(),
    currency: PayoutFlowsModelCurrency.optional(),
    frozen: Frozen.optional(),
    inactive: Inactive.optional(),
});

export declare namespace PayoutFlowsModel {
    interface Raw {
        id?: Id.Raw | null;
        created?: Created.Raw | null;
        modified?: Modified.Raw | null;
        creator?: Creator.Raw | null;
        modifier?: Modifier.Raw | null;
        login?: string | null;
        payoutLogin?: string | null;
        org?: string | null;
        division?: string | null;
        partition?: string | null;
        entity?: string | null;
        billing?: string | null;
        trigger?: PayoutFlowsModelTrigger.Raw | null;
        schedule?: PayoutFlowsModelSchedule.Raw | null;
        scheduleFactor?: number | null;
        start?: number | null;
        um?: string | null;
        amount?: number | null;
        minimum?: number | null;
        secondaryDescriptor?: string | null;
        payoutInactive?: number | null;
        skipOffDays?: number | null;
        sameDay?: number | null;
        currency?: PayoutFlowsModelCurrency.Raw | null;
        frozen?: Frozen.Raw | null;
        inactive?: Inactive.Raw | null;
    }
}
