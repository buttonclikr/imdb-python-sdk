/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as ButtonclikrApi from "../../api/index";
import * as core from "../../core";
import { PayoutFlowsRequestModelTrigger } from "./PayoutFlowsRequestModelTrigger";
import { PayoutFlowsRequestModelSchedule } from "./PayoutFlowsRequestModelSchedule";
import { PayoutFlowsRequestModelCurrency } from "./PayoutFlowsRequestModelCurrency";
import { Inactive } from "./Inactive";
import { Frozen } from "./Frozen";

export const PayoutFlowsRequestModel: core.serialization.ObjectSchema<
    serializers.PayoutFlowsRequestModel.Raw,
    ButtonclikrApi.PayoutFlowsRequestModel
> = core.serialization.object({
    login: core.serialization.string(),
    payoutLogin: core.serialization.string().optional(),
    org: core.serialization.string().optional(),
    entity: core.serialization.string().optional(),
    billing: core.serialization.string().optional(),
    trigger: PayoutFlowsRequestModelTrigger,
    schedule: PayoutFlowsRequestModelSchedule,
    scheduleFactor: core.serialization.number(),
    start: core.serialization.number().optional(),
    um: core.serialization.stringLiteral("percentneg"),
    amount: core.serialization.number(),
    minimum: core.serialization.number().optional(),
    payoutInactive: core.serialization.number(),
    skipOffDays: core.serialization.number(),
    secondaryDescriptor: core.serialization.string().optional(),
    currency: PayoutFlowsRequestModelCurrency.optional(),
    sameDay: core.serialization.number().optional(),
    inactive: Inactive,
    frozen: Frozen,
});

export declare namespace PayoutFlowsRequestModel {
    interface Raw {
        login: string;
        payoutLogin?: string | null;
        org?: string | null;
        entity?: string | null;
        billing?: string | null;
        trigger: PayoutFlowsRequestModelTrigger.Raw;
        schedule: PayoutFlowsRequestModelSchedule.Raw;
        scheduleFactor: number;
        start?: number | null;
        um: "percentneg";
        amount: number;
        minimum?: number | null;
        payoutInactive: number;
        skipOffDays: number;
        secondaryDescriptor?: string | null;
        currency?: PayoutFlowsRequestModelCurrency.Raw | null;
        sameDay?: number | null;
        inactive: Inactive.Raw;
        frozen: Frozen.Raw;
    }
}
