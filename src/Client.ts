/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments";
import * as core from "./core";
import { Stations } from "./api/resources/stations/client/Client";
import { Trips } from "./api/resources/trips/client/Client";
import { Bookings } from "./api/resources/bookings/client/Client";
import { Payments } from "./api/resources/payments/client/Client";

export declare namespace ButtonclikrApiClient {
    interface Options {
        environment?: core.Supplier<environments.ButtonclikrApiEnvironment | string>;
        token: core.Supplier<core.BearerToken>;
    }

    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
    }
}

export class ButtonclikrApiClient {
    constructor(protected readonly _options: ButtonclikrApiClient.Options) {}

    protected _stations: Stations | undefined;

    public get stations(): Stations {
        return (this._stations ??= new Stations(this._options));
    }

    protected _trips: Trips | undefined;

    public get trips(): Trips {
        return (this._trips ??= new Trips(this._options));
    }

    protected _bookings: Bookings | undefined;

    public get bookings(): Bookings {
        return (this._bookings ??= new Bookings(this._options));
    }

    protected _payments: Payments | undefined;

    public get payments(): Payments {
        return (this._payments ??= new Payments(this._options));
    }
}
