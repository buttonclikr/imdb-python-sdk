/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as ButtonclikrApi from "../../api/index";
import * as core from "../../core";
import { Id } from "./Id";
import { Created } from "./Created";
import { Modified } from "./Modified";
import { Creator } from "./Creator";
import { Modifier } from "./Modifier";
import { TxnsModelType } from "./TxnsModelType";
import { TerminalTxnsCurrencyProperty } from "./TerminalTxnsCurrencyProperty";
import { TxnsModelFundingCurrency } from "./TxnsModelFundingCurrency";
import { TxnsModelCurrencyConversion } from "./TxnsModelCurrencyConversion";
import { TxnsModelPlatform } from "./TxnsModelPlatform";
import { TxnsModelSettledCurrency } from "./TxnsModelSettledCurrency";
import { TerminalTxnsEntryModeProperty } from "./TerminalTxnsEntryModeProperty";
import { TxnsModelCvvStatus } from "./TxnsModelCvvStatus";
import { TxnsModelPinEntryCapability } from "./TxnsModelPinEntryCapability";
import { TxnsModelCofType } from "./TxnsModelCofType";
import { TxnsModelCopyReason } from "./TxnsModelCopyReason";
import { TxnsModelState } from "./TxnsModelState";
import { TerminalTxnsCountryProperty } from "./TerminalTxnsCountryProperty";
import { TxnsModelCheckStage } from "./TxnsModelCheckStage";
import { TxnsModelUnauthReason } from "./TxnsModelUnauthReason";
import { Inactive } from "./Inactive";
import { Frozen } from "./Frozen";

export const TxnsModel: core.serialization.ObjectSchema<serializers.TxnsModel.Raw, ButtonclikrApi.TxnsModel> =
    core.serialization.object({
        id: Id.optional(),
        created: Created.optional(),
        modified: Modified.optional(),
        creator: Creator.optional(),
        modifier: Modifier.optional(),
        ipCreated: core.serialization.string().optional(),
        ipModified: core.serialization.string().optional(),
        merchant: core.serialization.string().optional(),
        token: core.serialization.string().optional(),
        payment: core.serialization.string().optional(),
        fortxn: core.serialization.string().optional(),
        fromtxn: core.serialization.string().optional(),
        batch: core.serialization.string().optional(),
        subscription: core.serialization.string().optional(),
        statement: core.serialization.string().optional(),
        type: TxnsModelType.optional(),
        expiration: core.serialization.string().optional(),
        serviceCode: core.serialization.string().optional(),
        funded: core.serialization.number().optional(),
        returned: core.serialization.string().optional(),
        currency: TerminalTxnsCurrencyProperty.optional(),
        fundingCurrency: TxnsModelFundingCurrency.optional(),
        currencyConversion: TxnsModelCurrencyConversion.optional(),
        convenienceFee: core.serialization.number().optional(),
        fee: core.serialization.number().optional(),
        feeConsumed: core.serialization.number().optional(),
        platform: TxnsModelPlatform.optional(),
        authDate: core.serialization.number().optional(),
        authCode: core.serialization.string().optional(),
        captured: core.serialization.date().optional(),
        settled: core.serialization.string().optional(),
        settledCurrency: TxnsModelSettledCurrency.optional(),
        settledTotal: core.serialization.number().optional(),
        allowPartial: core.serialization.number().optional(),
        order: core.serialization.string().optional(),
        description: core.serialization.string().optional(),
        descriptor: core.serialization.string().optional(),
        traceNumber: core.serialization.number().optional(),
        discount: core.serialization.number().optional(),
        shipping: core.serialization.number().optional(),
        duty: core.serialization.number().optional(),
        terminal: core.serialization.string().optional(),
        terminalCapability: core.serialization.number().optional(),
        entryMode: TerminalTxnsEntryModeProperty.optional(),
        origin: core.serialization.number().optional(),
        mobile: core.serialization.number().optional(),
        tax: core.serialization.number().optional(),
        surcharge: core.serialization.number().optional(),
        total: core.serialization.number().optional(),
        cashback: core.serialization.number().optional(),
        authorization: core.serialization.string().optional(),
        originalApproved: core.serialization.number().optional(),
        approved: core.serialization.number().optional(),
        authentication: core.serialization.string().optional(),
        authenticationId: core.serialization.string().optional(),
        cvv: core.serialization.number().optional(),
        cvvStatus: TxnsModelCvvStatus.optional(),
        swiped: core.serialization.number().optional(),
        emv: core.serialization.number().optional(),
        signature: core.serialization.number().optional(),
        pin: core.serialization.number().optional(),
        pinEntryCapability: TxnsModelPinEntryCapability.optional(),
        unattended: core.serialization.number().optional(),
        cofType: TxnsModelCofType.optional(),
        copyReason: TxnsModelCopyReason.optional(),
        clientIp: core.serialization.string().optional(),
        first: core.serialization.string().optional(),
        middle: core.serialization.string().optional(),
        last: core.serialization.string().optional(),
        company: core.serialization.string().optional(),
        email: core.serialization.string().optional(),
        address1: core.serialization.string().optional(),
        address2: core.serialization.string().optional(),
        city: core.serialization.string().optional(),
        state: TxnsModelState.optional(),
        zip: core.serialization.string().optional(),
        country: TerminalTxnsCountryProperty.optional(),
        phone: core.serialization.string().optional(),
        mid: core.serialization.string().optional(),
        status: core.serialization.number().optional(),
        refunded: core.serialization.number().optional(),
        reserved: core.serialization.number().optional(),
        misused: core.serialization.number().optional(),
        checkStage: TxnsModelCheckStage.optional(),
        unauthReason: TxnsModelUnauthReason.optional(),
        authTokenCustomer: core.serialization.string().optional(),
        channel: core.serialization.string().optional(),
        imported: core.serialization.number().optional(),
        requestSequence: core.serialization.number().optional(),
        processedSequence: core.serialization.number().optional(),
        inactive: Inactive.optional(),
        frozen: Frozen.optional(),
        debtRepayment: core.serialization.number().optional(),
        fundingEnabled: core.serialization.number().optional(),
        fbo: core.serialization.string().optional(),
        txnsession: core.serialization.string().optional(),
    });

export declare namespace TxnsModel {
    interface Raw {
        id?: Id.Raw | null;
        created?: Created.Raw | null;
        modified?: Modified.Raw | null;
        creator?: Creator.Raw | null;
        modifier?: Modifier.Raw | null;
        ipCreated?: string | null;
        ipModified?: string | null;
        merchant?: string | null;
        token?: string | null;
        payment?: string | null;
        fortxn?: string | null;
        fromtxn?: string | null;
        batch?: string | null;
        subscription?: string | null;
        statement?: string | null;
        type?: TxnsModelType.Raw | null;
        expiration?: string | null;
        serviceCode?: string | null;
        funded?: number | null;
        returned?: string | null;
        currency?: TerminalTxnsCurrencyProperty.Raw | null;
        fundingCurrency?: TxnsModelFundingCurrency.Raw | null;
        currencyConversion?: TxnsModelCurrencyConversion.Raw | null;
        convenienceFee?: number | null;
        fee?: number | null;
        feeConsumed?: number | null;
        platform?: TxnsModelPlatform.Raw | null;
        authDate?: number | null;
        authCode?: string | null;
        captured?: string | null;
        settled?: string | null;
        settledCurrency?: TxnsModelSettledCurrency.Raw | null;
        settledTotal?: number | null;
        allowPartial?: number | null;
        order?: string | null;
        description?: string | null;
        descriptor?: string | null;
        traceNumber?: number | null;
        discount?: number | null;
        shipping?: number | null;
        duty?: number | null;
        terminal?: string | null;
        terminalCapability?: number | null;
        entryMode?: TerminalTxnsEntryModeProperty.Raw | null;
        origin?: number | null;
        mobile?: number | null;
        tax?: number | null;
        surcharge?: number | null;
        total?: number | null;
        cashback?: number | null;
        authorization?: string | null;
        originalApproved?: number | null;
        approved?: number | null;
        authentication?: string | null;
        authenticationId?: string | null;
        cvv?: number | null;
        cvvStatus?: TxnsModelCvvStatus.Raw | null;
        swiped?: number | null;
        emv?: number | null;
        signature?: number | null;
        pin?: number | null;
        pinEntryCapability?: TxnsModelPinEntryCapability.Raw | null;
        unattended?: number | null;
        cofType?: TxnsModelCofType.Raw | null;
        copyReason?: TxnsModelCopyReason.Raw | null;
        clientIp?: string | null;
        first?: string | null;
        middle?: string | null;
        last?: string | null;
        company?: string | null;
        email?: string | null;
        address1?: string | null;
        address2?: string | null;
        city?: string | null;
        state?: TxnsModelState.Raw | null;
        zip?: string | null;
        country?: TerminalTxnsCountryProperty.Raw | null;
        phone?: string | null;
        mid?: string | null;
        status?: number | null;
        refunded?: number | null;
        reserved?: number | null;
        misused?: number | null;
        checkStage?: TxnsModelCheckStage.Raw | null;
        unauthReason?: TxnsModelUnauthReason.Raw | null;
        authTokenCustomer?: string | null;
        channel?: string | null;
        imported?: number | null;
        requestSequence?: number | null;
        processedSequence?: number | null;
        inactive?: Inactive.Raw | null;
        frozen?: Frozen.Raw | null;
        debtRepayment?: number | null;
        fundingEnabled?: number | null;
        fbo?: string | null;
        txnsession?: string | null;
    }
}
