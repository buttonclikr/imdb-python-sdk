/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as ButtonclikrApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { PostBatchesRequestPlatform } from "../../types/PostBatchesRequestPlatform";
import { PostBatchesRequestStatus } from "../../types/PostBatchesRequestStatus";
import { PostBatchesRequestInactive } from "../../types/PostBatchesRequestInactive";
import { PostBatchesRequestFrozen } from "../../types/PostBatchesRequestFrozen";

export const PostBatchesRequest: core.serialization.Schema<
    serializers.PostBatchesRequest.Raw,
    ButtonclikrApi.PostBatchesRequest
> = core.serialization.object({
    merchant: core.serialization.unknown(),
    platform: PostBatchesRequestPlatform,
    status: PostBatchesRequestStatus,
    ref: core.serialization.unknown().optional(),
    clientRef: core.serialization.unknown().optional(),
    processingId: core.serialization.unknown().optional(),
    inactive: PostBatchesRequestInactive,
    frozen: PostBatchesRequestFrozen,
});

export declare namespace PostBatchesRequest {
    interface Raw {
        merchant?: unknown;
        platform: PostBatchesRequestPlatform.Raw;
        status: PostBatchesRequestStatus.Raw;
        ref?: unknown | null;
        clientRef?: unknown | null;
        processingId?: unknown | null;
        inactive: PostBatchesRequestInactive.Raw;
        frozen: PostBatchesRequestFrozen.Raw;
    }
}
