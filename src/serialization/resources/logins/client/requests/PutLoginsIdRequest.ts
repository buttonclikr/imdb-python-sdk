/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as ButtonclikrApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { PutLoginsIdRequestConfirmed } from "../../types/PutLoginsIdRequestConfirmed";
import { PutLoginsIdRequestPortalAccess } from "../../types/PutLoginsIdRequestPortalAccess";
import { PutLoginsIdRequestMfaEnabled } from "../../types/PutLoginsIdRequestMfaEnabled";
import { PutLoginsIdRequestState } from "../../types/PutLoginsIdRequestState";
import { PutLoginsIdRequestCountry } from "../../types/PutLoginsIdRequestCountry";
import { PutLoginsIdRequestInactive } from "../../types/PutLoginsIdRequestInactive";
import { PutLoginsIdRequestFrozen } from "../../types/PutLoginsIdRequestFrozen";

export const PutLoginsIdRequest: core.serialization.Schema<
    serializers.PutLoginsIdRequest.Raw,
    ButtonclikrApi.PutLoginsIdRequest
> = core.serialization.object({
    login: core.serialization.unknown().optional(),
    partition: core.serialization.unknown(),
    division: core.serialization.unknown().optional(),
    parentDivision: core.serialization.unknown().optional(),
    roles: core.serialization.unknown(),
    confirmed: PutLoginsIdRequestConfirmed,
    lastLogin: core.serialization.unknown(),
    username: core.serialization.unknown(),
    password: core.serialization.unknown(),
    first: core.serialization.unknown(),
    middle: core.serialization.unknown().optional(),
    last: core.serialization.unknown(),
    email: core.serialization.unknown(),
    allowedResources: core.serialization.unknown(),
    restrictedResources: core.serialization.unknown(),
    portalAccess: PutLoginsIdRequestPortalAccess,
    mfaEnabled: PutLoginsIdRequestMfaEnabled,
    mfaSecret: core.serialization.unknown().optional(),
    mfaEnrolledDate: core.serialization.unknown().optional(),
    mfaType: core.serialization.unknown().optional(),
    address1: core.serialization.unknown().optional(),
    address2: core.serialization.unknown().optional(),
    city: core.serialization.unknown().optional(),
    state: PutLoginsIdRequestState.optional(),
    zip: core.serialization.unknown().optional(),
    country: PutLoginsIdRequestCountry.optional(),
    phone: core.serialization.unknown().optional(),
    fax: core.serialization.unknown().optional(),
    inactive: PutLoginsIdRequestInactive,
    frozen: PutLoginsIdRequestFrozen,
});

export declare namespace PutLoginsIdRequest {
    interface Raw {
        login?: unknown | null;
        partition?: unknown;
        division?: unknown | null;
        parentDivision?: unknown | null;
        roles?: unknown;
        confirmed: PutLoginsIdRequestConfirmed.Raw;
        lastLogin?: unknown;
        username?: unknown;
        password?: unknown;
        first?: unknown;
        middle?: unknown | null;
        last?: unknown;
        email?: unknown;
        allowedResources?: unknown;
        restrictedResources?: unknown;
        portalAccess: PutLoginsIdRequestPortalAccess.Raw;
        mfaEnabled: PutLoginsIdRequestMfaEnabled.Raw;
        mfaSecret?: unknown | null;
        mfaEnrolledDate?: unknown | null;
        mfaType?: unknown | null;
        address1?: unknown | null;
        address2?: unknown | null;
        city?: unknown | null;
        state?: PutLoginsIdRequestState.Raw | null;
        zip?: unknown | null;
        country?: PutLoginsIdRequestCountry.Raw | null;
        phone?: unknown | null;
        fax?: unknown | null;
        inactive: PutLoginsIdRequestInactive.Raw;
        frozen: PutLoginsIdRequestFrozen.Raw;
    }
}
