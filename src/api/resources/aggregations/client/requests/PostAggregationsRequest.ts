/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as ButtonclikrApi from "../../../../index";

/**
 * @example
 *     {
 *         login: {
 *             "key": "value"
 *         },
 *         entity: {
 *             "key": "value"
 *         },
 *         forlogin: {
 *             "key": "value"
 *         },
 *         org: {
 *             "key": "value"
 *         },
 *         team: {
 *             "key": "value"
 *         },
 *         division: {
 *             "key": "value"
 *         },
 *         partition: {
 *             "key": "value"
 *         },
 *         type: ButtonclikrApi.PostAggregationsRequestType.EntityEntryEventMerchant,
 *         level: ButtonclikrApi.PostAggregationsRequestLevel.Admin,
 *         name: {
 *             "key": "value"
 *         },
 *         description: {
 *             "key": "value"
 *         },
 *         resource: 1,
 *         search: {
 *             "key": "value"
 *         },
 *         totals: {
 *             "key": "value"
 *         },
 *         degrouping: {
 *             "key": "value"
 *         },
 *         status: ButtonclikrApi.PostAggregationsRequestStatus.NotReady,
 *         schedule: ButtonclikrApi.PostAggregationsRequestSchedule.Hours,
 *         scheduleFactor: {
 *             "key": "value"
 *         },
 *         start: {
 *             "key": "value"
 *         },
 *         default: ButtonclikrApi.PostAggregationsRequestDefault.Zero,
 *         inactive: ButtonclikrApi.PostAggregationsRequestInactive.Zero,
 *         frozen: ButtonclikrApi.PostAggregationsRequestFrozen.Zero
 *     }
 */
export interface PostAggregationsRequest {
    login?: unknown;
    entity?: unknown;
    forlogin?: unknown;
    org?: unknown;
    team?: unknown;
    division?: unknown;
    partition?: unknown;
    /** The type of aggregation. This will automatically set the search and total values. Valid Values: `entityEntryEventMerchant` - A merchant entry, `merchantTxnApprovedAll` - All merchant transactions approved, `merchantTxnCapturedAll` - All merchant transactions captured, `merchantTxnFailedAll` - All merchant transactions failed. */
    type?: ButtonclikrApi.PostAggregationsRequestType;
    /** The level of user that this aggregation will run for. Valid Values: `admin` - Admin User, `division` - Division-level User, `merchant` - Merchant-level User, `partition` - Partition-level User. */
    level?: ButtonclikrApi.PostAggregationsRequestLevel;
    name?: unknown;
    description?: unknown;
    /** The category number of the resource used in the aggregation, this field is specified as an integer and is copied from the aggregation. */
    resource: number;
    search?: unknown;
    totals?: unknown;
    degrouping?: unknown;
    /** The level of user that this aggregation will run for. Valid Values: `admin` - Admin User, `division` - Division-level User, `merchant` - Merchant-level User, `partition` - Partition-level User. */
    status: ButtonclikrApi.PostAggregationsRequestStatus;
    /** The schedule that determines when the aggregation function will be processed. Valid Values: `hours` - Hourly schedule, `days` - Daily schedule, `weeks` - Weekly schedule, `months` - Monthly schedule, `years` - Annual schedule. */
    schedule: ButtonclikrApi.PostAggregationsRequestSchedule;
    scheduleFactor?: unknown;
    start?: unknown;
    /** Indicates whether this aggregation was automatically created. Valid Values: `0` - Manually created, `1` - Automatically created. */
    default: ButtonclikrApi.PostAggregationsRequestDefault;
    /** Whether this resource is marked as inactive. Valid Values: `0` - Active, `1` - Inactive. */
    inactive: ButtonclikrApi.PostAggregationsRequestInactive;
    /** Whether this resource is marked as frozen. Valid Values: `0` - Not Frozen, `1` - Frozen. */
    frozen: ButtonclikrApi.PostAggregationsRequestFrozen;
}
