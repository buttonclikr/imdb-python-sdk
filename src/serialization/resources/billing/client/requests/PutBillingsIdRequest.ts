/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as ButtonclikrApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { PutBillingsIdRequestSchedule } from "../../types/PutBillingsIdRequestSchedule";
import { PutBillingsIdRequestCollectionFactor } from "../../types/PutBillingsIdRequestCollectionFactor";
import { PutBillingsIdRequestCollectionIncludeCurrent } from "../../types/PutBillingsIdRequestCollectionIncludeCurrent";
import { PutBillingsIdRequestCurrency } from "../../types/PutBillingsIdRequestCurrency";
import { PutBillingsIdRequestInactive } from "../../types/PutBillingsIdRequestInactive";
import { PutBillingsIdRequestFrozen } from "../../types/PutBillingsIdRequestFrozen";

export const PutBillingsIdRequest: core.serialization.Schema<
    serializers.PutBillingsIdRequest.Raw,
    ButtonclikrApi.PutBillingsIdRequest
> = core.serialization.object({
    login: core.serialization.unknown(),
    entity: core.serialization.unknown(),
    forentity: core.serialization.unknown().optional(),
    org: core.serialization.unknown().optional(),
    division: core.serialization.unknown().optional(),
    partition: core.serialization.unknown().optional(),
    description: core.serialization.unknown().optional(),
    schedule: PutBillingsIdRequestSchedule,
    scheduleFactor: core.serialization.unknown(),
    start: core.serialization.unknown(),
    finish: core.serialization.unknown().optional(),
    collectionFactor: PutBillingsIdRequestCollectionFactor,
    collectionOffset: core.serialization.unknown(),
    collectionIncludeCurrent: PutBillingsIdRequestCollectionIncludeCurrent,
    currency: PutBillingsIdRequestCurrency,
    inactive: PutBillingsIdRequestInactive,
    frozen: PutBillingsIdRequestFrozen,
});

export declare namespace PutBillingsIdRequest {
    interface Raw {
        login?: unknown;
        entity?: unknown;
        forentity?: unknown | null;
        org?: unknown | null;
        division?: unknown | null;
        partition?: unknown | null;
        description?: unknown | null;
        schedule: PutBillingsIdRequestSchedule.Raw;
        scheduleFactor?: unknown;
        start?: unknown;
        finish?: unknown | null;
        collectionFactor: PutBillingsIdRequestCollectionFactor.Raw;
        collectionOffset?: unknown;
        collectionIncludeCurrent: PutBillingsIdRequestCollectionIncludeCurrent.Raw;
        currency: PutBillingsIdRequestCurrency.Raw;
        inactive: PutBillingsIdRequestInactive.Raw;
        frozen: PutBillingsIdRequestFrozen.Raw;
    }
}
