/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as ButtonclikrApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { PostHoldsRequestHoldSource } from "../../types/PostHoldsRequestHoldSource";
import { Inactive } from "../../../../types/Inactive";
import { Frozen } from "../../../../types/Frozen";

export const PostHoldsRequest: core.serialization.Schema<
    serializers.PostHoldsRequest.Raw,
    ButtonclikrApi.PostHoldsRequest
> = core.serialization.object({
    login: core.serialization.string(),
    entity: core.serialization.string().optional(),
    txn: core.serialization.string().optional(),
    terminalTxn: core.serialization.string().optional(),
    account: core.serialization.string().optional(),
    verification: core.serialization.string().optional(),
    verificationRef: core.serialization.string().optional(),
    decisionAction: core.serialization.string().optional(),
    action: core.serialization.number(),
    released: core.serialization.date().optional(),
    reviewed: core.serialization.date().optional(),
    releaseAction: core.serialization.number().optional(),
    holdSource: PostHoldsRequestHoldSource.optional(),
    holdSourceId: core.serialization.string().optional(),
    delayedFundingStartDate: core.serialization.date().optional(),
    delayedFundingEndDate: core.serialization.date().optional(),
    analyst: core.serialization.string().optional(),
    claimed: core.serialization.date().optional(),
    division: core.serialization.string().optional(),
    inactive: Inactive,
    frozen: Frozen,
});

export declare namespace PostHoldsRequest {
    interface Raw {
        login: string;
        entity?: string | null;
        txn?: string | null;
        terminalTxn?: string | null;
        account?: string | null;
        verification?: string | null;
        verificationRef?: string | null;
        decisionAction?: string | null;
        action: number;
        released?: string | null;
        reviewed?: string | null;
        releaseAction?: number | null;
        holdSource?: PostHoldsRequestHoldSource.Raw | null;
        holdSourceId?: string | null;
        delayedFundingStartDate?: string | null;
        delayedFundingEndDate?: string | null;
        analyst?: string | null;
        claimed?: string | null;
        division?: string | null;
        inactive: Inactive.Raw;
        frozen: Frozen.Raw;
    }
}
