/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as ButtonclikrApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { PostProfitShareRulesRequestType } from "../../types/PostProfitShareRulesRequestType";
import { PostProfitShareRulesRequestInactive } from "../../types/PostProfitShareRulesRequestInactive";
import { PostProfitShareRulesRequestFrozen } from "../../types/PostProfitShareRulesRequestFrozen";

export const PostProfitShareRulesRequest: core.serialization.Schema<
    serializers.PostProfitShareRulesRequest.Raw,
    ButtonclikrApi.PostProfitShareRulesRequest
> = core.serialization.object({
    profitShare: core.serialization.unknown(),
    name: core.serialization.unknown().optional(),
    description: core.serialization.unknown().optional(),
    type: PostProfitShareRulesRequestType,
    value: core.serialization.string(),
    grouping: core.serialization.unknown().optional(),
    inactive: PostProfitShareRulesRequestInactive,
    frozen: PostProfitShareRulesRequestFrozen,
});

export declare namespace PostProfitShareRulesRequest {
    interface Raw {
        profitShare?: unknown;
        name?: unknown | null;
        description?: unknown | null;
        type: PostProfitShareRulesRequestType.Raw;
        value: string;
        grouping?: unknown | null;
        inactive: PostProfitShareRulesRequestInactive.Raw;
        frozen: PostProfitShareRulesRequestFrozen.Raw;
    }
}
